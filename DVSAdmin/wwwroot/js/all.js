(() => { var t = Object.create, e = Object.defineProperty, o = Object.getOwnPropertyDescriptor, n = Object.getOwnPropertyNames, i = Object.getPrototypeOf, s = Object.prototype.hasOwnProperty, a = (t, e) => function () { return e || (0, t[n(t)[0]])((e = { exports: {} }).exports, e), e.exports }, r = (a, r, l) => (l = null != a ? t(i(a)) : {}, ((t, i, a, r) => { if (i && "object" == typeof i || "function" == typeof i) for (let l of n(i)) s.call(t, l) || l === a || e(t, l, { get: () => i[l], enumerable: !(r = o(i, l)) || r.enumerable }); return t })(!r && a && a.__esModule ? l : e(l, "default", { value: a, enumerable: !0 }), a)), l = a({ "package/moj/all.js"(t, e) { var o, n; o = t, n = function () { var t = {}; function e(t, e) { if (!t) return this; const o = Object.freeze({ properties: { excludedDates: { type: "string" }, excludedDays: { type: "string" }, leadingZeros: { type: "string" }, maxDate: { type: "string" }, minDate: { type: "string" }, weekStartDay: { type: "string" } } }); this.config = this.mergeConfigs({ leadingZeros: !1, weekStartDay: "monday" }, e, this.parseDataset(o, t.dataset)), this.dayLabels = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"], this.monthLabels = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], this.currentDate = new Date, this.currentDate.setHours(0, 0, 0, 0), this.calendarDays = [], this.excludedDates = [], this.excludedDays = [], this.buttonClass = "moj-datepicker__button", this.selectedDayButtonClass = "moj-datepicker__button--selected", this.currentDayButtonClass = "moj-datepicker__button--current", this.todayButtonClass = "moj-datepicker__button--today", this.$module = t, this.$input = t.querySelector(".moj-js-datepicker-input") } function o(t, e, o, n, i) { this.index = e, this.row = o, this.column = n, this.button = t, this.picker = i, this.date = new Date } return t.removeAttributeValue = function (t, e, o) { var n, i; t.getAttribute(e) && (t.getAttribute(e) == o ? t.removeAttribute(e) : (n = new RegExp("(^|\\s)" + o + "(\\s|$)"), (i = t.getAttribute(e).match(n)) && 3 == i.length && t.setAttribute(e, t.getAttribute(e).replace(n, i[1] && i[2] ? " " : "")))) }, t.addAttributeValue = function (t, e, o) { t.getAttribute(e) ? new RegExp("(^|\\s)" + o + "(\\s|$)").test(t.getAttribute(e)) || t.setAttribute(e, t.getAttribute(e) + " " + o) : t.setAttribute(e, o) }, t.dragAndDropSupported = function () { return void 0 !== document.createElement("div").ondrop }, t.formDataSupported = function () { return "function" == typeof FormData }, t.fileApiSupported = function () { var t = document.createElement("input"); return t.type = "file", void 0 !== t.files }, t.nodeListForEach = function (t, e) { if (window.NodeList.prototype.forEach) return t.forEach(e); for (var o = 0; o < t.length; o++)e.call(window, t[o], o, t) }, t.initAll = function (e) { var o = void 0 !== (e = void 0 !== e ? e : {}).scope ? e.scope : document, n = o.querySelectorAll('[data-module="moj-add-another"]'); t.nodeListForEach(n, (function (e) { new t.AddAnother(e) })); var i = o.querySelectorAll('[data-module="moj-multi-select"]'); t.nodeListForEach(i, (function (e) { new t.MultiSelect({ container: e.querySelector(e.getAttribute("data-multi-select-checkbox")), checkboxes: e.querySelectorAll("tbody .govuk-checkboxes__input") }) })); var s = o.querySelectorAll('[data-module="moj-password-reveal"]'); t.nodeListForEach(s, (function (e) { new t.PasswordReveal(e) })); var a = o.querySelectorAll('[data-module="moj-rich-text-editor"]'); t.nodeListForEach(a, (function (e) { var o = { textarea: $(e) }, n = e.getAttribute("data-moj-rich-text-editor-toolbar"); if (n) { var i = n.split(","); for (var s in o.toolbar = {}, i) o.toolbar[i[s]] = !0 } new t.RichTextEditor(o) })); var r = o.querySelectorAll('[data-module="moj-search-toggle"]'); t.nodeListForEach(r, (function (e) { new t.SearchToggle({ toggleButton: { container: $(e.querySelector(".moj-search-toggle__toggle")), text: e.getAttribute("data-moj-search-toggle-text") }, search: { container: $(e.querySelector(".moj-search")) } }) })); var l = o.querySelectorAll('[data-module="moj-sortable-table"]'); t.nodeListForEach(l, (function (e) { new t.SortableTable({ table: e }) })), l = o.querySelectorAll('[data-module="moj-sortable-table"]'), t.nodeListForEach(l, (function (e) { new t.SortableTable({ table: e }) })); const u = document.querySelectorAll('[data-module="moj-date-picker"]'); t.nodeListForEach(u, (function (e) { new t.DatePicker(e, {}).init() })) }, t.AddAnother = function (t) { this.container = $(t), this.container.data("moj-add-another-initialised") || (this.container.data("moj-add-another-initialised", !0), this.container.on("click", ".moj-add-another__remove-button", $.proxy(this, "onRemoveButtonClick")), this.container.on("click", ".moj-add-another__add-button", $.proxy(this, "onAddButtonClick")), this.container.find(".moj-add-another__add-button, moj-add-another__remove-button").prop("type", "button")) }, t.AddAnother.prototype.onAddButtonClick = function (t) { var e = this.getNewItem(); this.updateAttributes(this.getItems().length, e), this.resetItem(e); var o = this.getItems().first(); this.hasRemoveButton(o) || this.createRemoveButton(o), this.getItems().last().after(e), e.find("input, textarea, select").first().focus() }, t.AddAnother.prototype.hasRemoveButton = function (t) { return t.find(".moj-add-another__remove-button").length }, t.AddAnother.prototype.getItems = function () { return this.container.find(".moj-add-another__item") }, t.AddAnother.prototype.getNewItem = function () { var t = this.getItems().first().clone(); return this.hasRemoveButton(t) || this.createRemoveButton(t), t }, t.AddAnother.prototype.updateAttributes = function (t, e) { e.find("[data-name]").each((function (o, n) { var i = n.id; n.name = $(n).attr("data-name").replace(/%index%/, t), n.id = $(n).attr("data-id").replace(/%index%/, t), ($(n).siblings("label")[0] || $(n).parents("label")[0] || e.find('[for="' + i + '"]')[0]).htmlFor = n.id })) }, t.AddAnother.prototype.createRemoveButton = function (t) { t.append('<button type="button" class="govuk-button govuk-button--secondary moj-add-another__remove-button">Remove</button>') }, t.AddAnother.prototype.resetItem = function (t) { t.find("[data-name], [data-id]").each((function (t, e) { "checkbox" == e.type || "radio" == e.type ? e.checked = !1 : e.value = "" })) }, t.AddAnother.prototype.onRemoveButtonClick = function (t) { $(t.currentTarget).parents(".moj-add-another__item").remove(); var e = this.getItems(); 1 === e.length && e.find(".moj-add-another__remove-button").remove(), e.each($.proxy((function (t, e) { this.updateAttributes(t, $(e)) }), this)), this.focusHeading() }, t.AddAnother.prototype.focusHeading = function () { this.container.find(".moj-add-another__heading").focus() }, t.ButtonMenu = function (t) { this.container = $(t.container), this.menu = this.container.find(".moj-button-menu__wrapper"), t.menuClasses && this.menu.addClass(t.menuClasses), this.menu.attr("role", "menu"), this.mq = t.mq, this.buttonText = t.buttonText, this.buttonClasses = t.buttonClasses || "", this.keys = { esc: 27, up: 38, down: 40, tab: 9 }, this.menu.on("keydown", "[role=menuitem]", $.proxy(this, "onButtonKeydown")), this.createToggleButton(), this.setupResponsiveChecks(), $(document).on("click", $.proxy(this, "onDocumentClick")) }, t.ButtonMenu.prototype.onDocumentClick = function (t) { $.contains(this.container[0], t.target) || this.hideMenu() }, t.ButtonMenu.prototype.createToggleButton = function () { this.menuButton = $('<button class="govuk-button moj-button-menu__toggle-button ' + this.buttonClasses + '" type="button" aria-haspopup="true" aria-expanded="false">' + this.buttonText + "</button>"), this.menuButton.on("click", $.proxy(this, "onMenuButtonClick")), this.menuButton.on("keydown", $.proxy(this, "onMenuKeyDown")) }, t.ButtonMenu.prototype.setupResponsiveChecks = function () { this.mql = window.matchMedia(this.mq), this.mql.addListener($.proxy(this, "checkMode")), this.checkMode(this.mql) }, t.ButtonMenu.prototype.checkMode = function (t) { t.matches ? this.enableBigMode() : this.enableSmallMode() }, t.ButtonMenu.prototype.enableSmallMode = function () { this.container.prepend(this.menuButton), this.hideMenu(), this.removeButtonClasses(), this.menu.attr("role", "menu"), this.container.find(".moj-button-menu__item").attr("role", "menuitem") }, t.ButtonMenu.prototype.enableBigMode = function () { this.menuButton.detach(), this.showMenu(), this.addButtonClasses(), this.menu.removeAttr("role"), this.container.find(".moj-button-menu__item").removeAttr("role") }, t.ButtonMenu.prototype.removeButtonClasses = function () { this.menu.find(".moj-button-menu__item").each((function (t, e) { $(e).hasClass("govuk-button--secondary") && ($(e).attr("data-secondary", "true"), $(e).removeClass("govuk-button--secondary")), $(e).hasClass("govuk-button--warning") && ($(e).attr("data-warning", "true"), $(e).removeClass("govuk-button--warning")), $(e).removeClass("govuk-button") })) }, t.ButtonMenu.prototype.addButtonClasses = function () { this.menu.find(".moj-button-menu__item").each((function (t, e) { "true" == $(e).attr("data-secondary") && $(e).addClass("govuk-button--secondary"), "true" == $(e).attr("data-warning") && $(e).addClass("govuk-button--warning"), $(e).addClass("govuk-button") })) }, t.ButtonMenu.prototype.hideMenu = function () { this.menuButton.attr("aria-expanded", "false") }, t.ButtonMenu.prototype.showMenu = function () { this.menuButton.attr("aria-expanded", "true") }, t.ButtonMenu.prototype.onMenuButtonClick = function () { this.toggle() }, t.ButtonMenu.prototype.toggle = function () { "false" == this.menuButton.attr("aria-expanded") ? (this.showMenu(), this.menu.find("[role=menuitem]").first().focus()) : (this.hideMenu(), this.menuButton.focus()) }, t.ButtonMenu.prototype.onMenuKeyDown = function (t) { t.keyCode === this.keys.down && this.toggle() }, t.ButtonMenu.prototype.onButtonKeydown = function (t) { switch (t.keyCode) { case this.keys.up: t.preventDefault(), this.focusPrevious(t.currentTarget); break; case this.keys.down: t.preventDefault(), this.focusNext(t.currentTarget); break; case this.keys.esc: this.mql.matches || (this.menuButton.focus(), this.hideMenu()); break; case this.keys.tab: this.mql.matches || this.hideMenu() } }, t.ButtonMenu.prototype.focusNext = function (t) { var e = $(t).next(); e[0] ? e.focus() : this.container.find("[role=menuitem]").first().focus() }, t.ButtonMenu.prototype.focusPrevious = function (t) { var e = $(t).prev(); e[0] ? e.focus() : this.container.find("[role=menuitem]").last().focus() }, e.prototype.init = function () { this.$input && (this.setOptions(), this.initControls()) }, e.prototype.initControls = function () { this.id = `datepicker-${this.$input.id}`, this.$dialog = this.createDialog(), this.createCalendarHeaders(); const t = document.createElement("div"), e = document.createElement("div"); t.classList.add("moj-datepicker__wrapper"), e.classList.add("govuk-input__wrapper"), this.$input.parentNode.insertBefore(t, this.$input), t.appendChild(e), e.appendChild(this.$input), e.insertAdjacentHTML("beforeend", this.toggleTemplate()), t.insertAdjacentElement("beforeend", this.$dialog), this.$calendarButton = this.$module.querySelector(".moj-js-datepicker-toggle"), this.$dialogTitle = this.$dialog.querySelector(".moj-js-datepicker-month-year"), this.createCalendar(), this.$prevMonthButton = this.$dialog.querySelector(".moj-js-datepicker-prev-month"), this.$prevYearButton = this.$dialog.querySelector(".moj-js-datepicker-prev-year"), this.$nextMonthButton = this.$dialog.querySelector(".moj-js-datepicker-next-month"), this.$nextYearButton = this.$dialog.querySelector(".moj-js-datepicker-next-year"), this.$cancelButton = this.$dialog.querySelector(".moj-js-datepicker-cancel"), this.$okButton = this.$dialog.querySelector(".moj-js-datepicker-ok"), this.$prevMonthButton.addEventListener("click", (t => this.focusPreviousMonth(t, !1))), this.$prevYearButton.addEventListener("click", (t => this.focusPreviousYear(t, !1))), this.$nextMonthButton.addEventListener("click", (t => this.focusNextMonth(t, !1))), this.$nextYearButton.addEventListener("click", (t => this.focusNextYear(t, !1))), this.$cancelButton.addEventListener("click", (t => { t.preventDefault(), this.closeDialog(t) })), this.$okButton.addEventListener("click", (() => { this.selectDate(this.currentDate) })); const o = this.$dialog.querySelectorAll('button:not([disabled="true"])'); this.$firstButtonInDialog = o[0], this.$lastButtonInDialog = o[o.length - 1], this.$firstButtonInDialog.addEventListener("keydown", (t => this.firstButtonKeydown(t))), this.$lastButtonInDialog.addEventListener("keydown", (t => this.lastButtonKeydown(t))), this.$calendarButton.addEventListener("click", (t => this.toggleDialog(t))), this.$dialog.addEventListener("keydown", (t => { "Escape" == t.key && (this.closeDialog(), t.preventDefault(), t.stopPropagation()) })), document.body.addEventListener("mouseup", (t => this.backgroundClick(t))), this.updateCalendar() }, e.prototype.createDialog = function () { const t = `datepicker-title-${this.$input.id}`, e = document.createElement("div"); return e.id = this.id, e.setAttribute("class", "moj-datepicker__dialog"), e.setAttribute("role", "dialog"), e.setAttribute("aria-modal", "true"), e.setAttribute("aria-labelledby", t), e.innerHTML = this.dialogTemplate(t), e }, e.prototype.createCalendar = function () { const t = this.$dialog.querySelector("tbody"); let e = 0; for (let n = 0; n < 6; n++) { const i = t.insertRow(n); for (let t = 0; t < 7; t++) { const s = document.createElement("td"), a = document.createElement("button"); s.appendChild(a), i.appendChild(s); const r = new o(a, e, n, t, this); r.init(), this.calendarDays.push(r), e++ } } }, e.prototype.toggleTemplate = function () { return `<button class="moj-datepicker__toggle moj-js-datepicker-toggle" type="button" aria-haspopup="dialog" aria-controls="${this.id}" aria-expanded="false">\n <span class="govuk-visually-hidden">Choose date</span>\n <svg width="32" height="24" focusable="false" class="moj-datepicker-icon" aria-hidden="true" role="img" viewBox="0 0 22 22">\n <path\n fill="currentColor"\n fill-rule="evenodd"\n clip-rule="evenodd"\n d="M16.1333 2.93333H5.86668V4.4C5.86668 5.21002 5.21003 5.86667 4.40002 5.86667C3.59 5.86667 2.93335 5.21002 2.93335 4.4V2.93333H2C0.895431 2.93333 0 3.82877 0 4.93334V19.2667C0 20.3712 0.89543 21.2667 2 21.2667H20C21.1046 21.2667 22 20.3712 22 19.2667V4.93333C22 3.82876 21.1046 2.93333 20 2.93333H19.0667V4.4C19.0667 5.21002 18.41 5.86667 17.6 5.86667C16.79 5.86667 16.1333 5.21002 16.1333 4.4V2.93333ZM20.5333 8.06667H1.46665V18.8C1.46665 19.3523 1.91436 19.8 2.46665 19.8H19.5333C20.0856 19.8 20.5333 19.3523 20.5333 18.8V8.06667Z"\n ></path>\n <rect x="3.66669" width="1.46667" height="5.13333" rx="0.733333" fill="currentColor"></rect>\n <rect x="16.8667" width="1.46667" height="5.13333" rx="0.733333" fill="currentColor"></rect>\n </svg>\n </button>` }, e.prototype.dialogTemplate = function (t) { return `<div class="moj-datepicker__dialog-header">\n <div class="moj-datepicker__dialog-navbuttons">\n <button class="moj-datepicker__button moj-js-datepicker-prev-year">\n <span class="govuk-visually-hidden">Previous year</span>\n <svg width="44" height="40" viewBox="0 0 44 40" fill="none" fill="none" focusable="false" aria-hidden="true" role="img">\n <path fill-rule="evenodd" clip-rule="evenodd" d="M23.1643 20L28.9572 14.2071L27.5429 12.7929L20.3358 20L27.5429 27.2071L28.9572 25.7929L23.1643 20Z" fill="currentColor"/>\n <path fill-rule="evenodd" clip-rule="evenodd" d="M17.1643 20L22.9572 14.2071L21.5429 12.7929L14.3358 20L21.5429 27.2071L22.9572 25.7929L17.1643 20Z" fill="currentColor"/>\n </svg>\n </button>\n\n <button class="moj-datepicker__button moj-js-datepicker-prev-month">\n <span class="govuk-visually-hidden">Previous month</span>\n <svg width="44" height="40" viewBox="0 0 44 40" fill="none" focusable="false" aria-hidden="true" role="img">\n <path fill-rule="evenodd" clip-rule="evenodd" d="M20.5729 20L25.7865 14.2071L24.5137 12.7929L18.0273 20L24.5137 27.2071L25.7865 25.7929L20.5729 20Z" fill="currentColor"/>\n </svg>\n </button>\n </div>\n\n <h2 id="${t}" class="moj-datepicker__dialog-title moj-js-datepicker-month-year" aria-live="polite">June 2020</h2>\n\n <div class="moj-datepicker__dialog-navbuttons">\n <button class="moj-datepicker__button moj-js-datepicker-next-month">\n <span class="govuk-visually-hidden">Next month</span>\n <svg width="44" height="40" viewBox="0 0 44 40" fill="none" focusable="false" aria-hidden="true" role="img">\n <path fill-rule="evenodd" clip-rule="evenodd" d="M23.4271 20L18.2135 14.2071L19.4863 12.7929L25.9727 20L19.4863 27.2071L18.2135 25.7929L23.4271 20Z" fill="currentColor"/>\n </svg>\n </button>\n\n <button class="moj-datepicker__button moj-js-datepicker-next-year">\n <span class="govuk-visually-hidden">Next year</span>\n <svg width="44" height="40" viewBox="0 0 44 40" fill="none" fill="none" focusable="false" aria-hidden="true" role="img">\n <path fill-rule="evenodd" clip-rule="evenodd" d="M20.8357 20L15.0428 14.2071L16.4571 12.7929L23.6642 20L16.4571 27.2071L15.0428 25.7929L20.8357 20Z" fill="currentColor"/>\n <path fill-rule="evenodd" clip-rule="evenodd" d="M26.8357 20L21.0428 14.2071L22.4571 12.7929L29.6642 20L22.4571 27.2071L21.0428 25.7929L26.8357 20Z" fill="currentColor"/>\n </svg>\n </button>\n </div>\n </div>\n\n <table class="moj-datepicker__calendar moj-js-datepicker-grid" role="grid" aria-labelledby="${t}">\n <thead>\n <tr></tr>\n </thead>\n\n <tbody></tbody>\n </table>\n\n <div class="govuk-button-group">\n <button type="button" class="govuk-button moj-js-datepicker-ok">Select</button>\n <button type="button" class="govuk-button govuk-button--secondary moj-js-datepicker-cancel">Close</button>\n </div>` }, e.prototype.createCalendarHeaders = function () { this.dayLabels.forEach((t => { const e = `<th scope="col"><span aria-hidden="true">${t.substring(0, 3)}</span><span class="govuk-visually-hidden">${t}</span></th>`; this.$dialog.querySelector("thead > tr").insertAdjacentHTML("beforeend", e) })) }, e.prototype.leadingZeros = function (t, e = 2) { let o = t.toString(); for (; o.length < e;)o = `0${o}`; return o }, e.prototype.setOptions = function () { this.setMinAndMaxDatesOnCalendar(), this.setExcludedDates(), this.setExcludedDays(), this.setLeadingZeros(), this.setWeekStartDay() }, e.prototype.setMinAndMaxDatesOnCalendar = function () { this.config.minDate && (this.minDate = this.formattedDateFromString(this.config.minDate, null), this.minDate && this.currentDate < this.minDate && (this.currentDate = this.minDate)), this.config.maxDate && (this.maxDate = this.formattedDateFromString(this.config.maxDate, null), this.maxDate && this.currentDate > this.maxDate && (this.currentDate = this.maxDate)) }, e.prototype.setExcludedDates = function () { this.config.excludedDates && (this.excludedDates = this.config.excludedDates.replace(/\s+/, " ").split(" ").map((t => { if (!t.includes("-")) return this.formattedDateFromString(t, null); { const [e, o] = t.split("-").map((t => this.formattedDateFromString(t, null))); if (e && o) { const t = new Date(e.getTime()), n = []; for (; t <= o;)n.push(new Date(t)), t.setDate(t.getDate() + 1); return n } } })).flat().filter((t => t))) }, e.prototype.setExcludedDays = function () { if (this.config.excludedDays) { let t = this.dayLabels.map((t => t.toLowerCase())); "monday" === this.config.weekStartDay && t.unshift(t.pop()), this.excludedDays = this.config.excludedDays.replace(/\s+/, " ").toLowerCase().split(" ").map((e => t.indexOf(e))).filter((t => -1 !== t)) } }, e.prototype.setLeadingZeros = function () { "boolean" != typeof this.config.leadingZeros && ("true" === this.config.leadingZeros.toLowerCase() && (this.config.leadingZeros = !0), "false" === this.config.leadingZeros.toLowerCase() && (this.config.leadingZeros = !1)) }, e.prototype.setWeekStartDay = function () { const t = this.config.weekStartDay; "sunday" === (null == t ? void 0 : t.toLowerCase()) && (this.config.weekStartDay = "sunday", this.dayLabels.unshift(this.dayLabels.pop())), "monday" === (null == t ? void 0 : t.toLowerCase()) && (this.config.weekStartDay = "monday") }, e.prototype.isExcludedDate = function (t) { if (this.minDate && this.minDate > t) return !0; if (this.maxDate && this.maxDate < t) return !0; for (const e of this.excludedDates) if (t.toDateString() === e.toDateString()) return !0; return !!this.excludedDays.includes(t.getDay()) }, e.prototype.formattedDateFromString = function (t, e = new Date) { let o = null; const n = /(\d{1,2})([-/,. ])(\d{1,2})\2(\d{4})/; if (!n.test(t)) return e; const i = t.match(n), s = i[1], a = i[3], r = i[4]; return o = new Date(`${a}-${s}-${r}`), o instanceof Date && !isNaN(o) ? o : e }, e.prototype.formattedDateFromDate = function (t) { return this.config.leadingZeros ? `${this.leadingZeros(t.getDate())}/${this.leadingZeros(t.getMonth() + 1)}/${t.getFullYear()}` : `${t.getDate()}/${t.getMonth() + 1}/${t.getFullYear()}` }, e.prototype.formattedDateHuman = function (t) { return `${this.dayLabels[(t.getDay() + 6) % 7]} ${t.getDate()} ${this.monthLabels[t.getMonth()]} ${t.getFullYear()}` }, e.prototype.backgroundClick = function (t) { !this.isOpen() || this.$dialog.contains(t.target) || this.$input.contains(t.target) || this.$calendarButton.contains(t.target) || (t.preventDefault(), this.closeDialog()) }, e.prototype.firstButtonKeydown = function (t) { "Tab" === t.key && t.shiftKey && (this.$lastButtonInDialog.focus(), t.preventDefault()) }, e.prototype.lastButtonKeydown = function (t) { "Tab" !== t.key || t.shiftKey || (this.$firstButtonInDialog.focus(), t.preventDefault()) }, e.prototype.updateCalendar = function () { this.$dialogTitle.innerHTML = `${this.monthLabels[this.currentDate.getMonth()]} ${this.currentDate.getFullYear()}`; const t = this.currentDate, e = new Date(t.getFullYear(), t.getMonth(), 1); let o; o = "monday" === this.config.weekStartDay ? 0 === e.getDay() ? 6 : e.getDay() - 1 : e.getDay(), e.setDate(e.getDate() - o); const n = new Date(e); for (let e = 0; e < this.calendarDays.length; e++) { const o = n.getMonth() !== t.getMonth(), i = this.isExcludedDate(n); this.calendarDays[e].update(n, o, i), n.setDate(n.getDate() + 1) } }, e.prototype.setCurrentDate = function (t = !0) { const { currentDate: e } = this; if (this.calendarDays.forEach((o => { o.button.classList.add("moj-datepicker__button"), o.button.classList.add("moj-datepicker__calendar-day"), o.button.setAttribute("tabindex", -1), o.button.classList.remove(this.selectedDayButtonClass); const n = o.date; n.setHours(0, 0, 0, 0); const i = new Date; i.setHours(0, 0, 0, 0), n.getTime() === e.getTime() && t && (o.button.setAttribute("tabindex", 0), o.button.focus(), o.button.classList.add(this.selectedDayButtonClass)), this.inputDate && n.getTime() === this.inputDate.getTime() ? (o.button.classList.add(this.currentDayButtonClass), o.button.setAttribute("aria-selected", !0)) : (o.button.classList.remove(this.currentDayButtonClass), o.button.removeAttribute("aria-selected")), n.getTime() === i.getTime() ? o.button.classList.add(this.todayButtonClass) : o.button.classList.remove(this.todayButtonClass) })), !t) { const t = this.calendarDays.filter((t => "block" === window.getComputedStyle(t.button).display && !t.button.disabled)); t[0].button.setAttribute("tabindex", 0), this.currentDate = t[0].date } }, e.prototype.selectDate = function (t) { if (this.isExcludedDate(t)) return; this.$calendarButton.querySelector("span").innerText = `Choose date. Selected date is ${this.formattedDateHuman(t)}`, this.$input.value = this.formattedDateFromDate(t); const e = new Event("change", { bubbles: !0, cancelable: !0 }); this.$input.dispatchEvent(e), this.closeDialog() }, e.prototype.isOpen = function () { return this.$dialog.classList.contains("moj-datepicker__dialog--open") }, e.prototype.toggleDialog = function (t) { t.preventDefault(), this.isOpen() ? this.closeDialog() : (this.setMinAndMaxDatesOnCalendar(), this.openDialog()) }, e.prototype.openDialog = function () { this.$dialog.classList.add("moj-datepicker__dialog--open"), this.$calendarButton.setAttribute("aria-expanded", "true"), this.$input.offsetWidth > this.$dialog.offsetWidth && (this.$dialog.style.right = "0px"), this.$dialog.style.top = `${this.$input.offsetHeight + 3}px`, this.inputDate = this.formattedDateFromString(this.$input.value), this.currentDate = this.inputDate, this.currentDate.setHours(0, 0, 0, 0), this.updateCalendar(), this.setCurrentDate() }, e.prototype.closeDialog = function () { this.$dialog.classList.remove("moj-datepicker__dialog--open"), this.$calendarButton.setAttribute("aria-expanded", "false"), this.$calendarButton.focus() }, e.prototype.goToDate = function (t, e) { const o = this.currentDate; this.currentDate = t, o.getMonth() === this.currentDate.getMonth() && o.getFullYear() === this.currentDate.getFullYear() || this.updateCalendar(), this.setCurrentDate(e) }, e.prototype.focusNextDay = function () { const t = new Date(this.currentDate); t.setDate(t.getDate() + 1), this.goToDate(t) }, e.prototype.focusPreviousDay = function () { const t = new Date(this.currentDate); t.setDate(t.getDate() - 1), this.goToDate(t) }, e.prototype.focusNextWeek = function () { const t = new Date(this.currentDate); t.setDate(t.getDate() + 7), this.goToDate(t) }, e.prototype.focusPreviousWeek = function () { const t = new Date(this.currentDate); t.setDate(t.getDate() - 7), this.goToDate(t) }, e.prototype.focusFirstDayOfWeek = function () { const t = new Date(this.currentDate); t.setDate(t.getDate() - t.getDay()), this.goToDate(t) }, e.prototype.focusLastDayOfWeek = function () { const t = new Date(this.currentDate); t.setDate(t.getDate() - t.getDay() + 6), this.goToDate(t) }, e.prototype.focusNextMonth = function (t, e = !0) { t.preventDefault(); const o = new Date(this.currentDate); o.setMonth(o.getMonth() + 1, 1), this.goToDate(o, e) }, e.prototype.focusPreviousMonth = function (t, e = !0) { t.preventDefault(); const o = new Date(this.currentDate); o.setMonth(o.getMonth() - 1, 1), this.goToDate(o, e) }, e.prototype.focusNextYear = function (t, e = !0) { t.preventDefault(); const o = new Date(this.currentDate); o.setFullYear(o.getFullYear() + 1, o.getMonth(), 1), this.goToDate(o, e) }, e.prototype.focusPreviousYear = function (t, e = !0) { t.preventDefault(); const o = new Date(this.currentDate); o.setFullYear(o.getFullYear() - 1, o.getMonth(), 1), this.goToDate(o, e) }, e.prototype.parseDataset = function (t, e) { const o = {}; for (const [n, i] of Object.entries(t.properties)) n in e && (o[n] = e[n]); return o }, e.prototype.mergeConfigs = function (...t) { const e = {}; for (const o of t) for (const t of Object.keys(o)) { const n = e[t], i = o[t]; e[t] = "object" == typeof n && "object" == typeof i ? this.mergeConfigs(n, i) : i } return e }, o.prototype.init = function () { this.button.addEventListener("keydown", this.keyPress.bind(this)), this.button.addEventListener("click", this.click.bind(this)) }, o.prototype.update = function (t, e, o) { let n = t.getDate(), i = this.picker.formattedDateHuman(t); o ? (this.button.setAttribute("aria-disabled", !0), i = "Excluded date, " + i) : this.button.removeAttribute("aria-disabled"), this.button.style.display = e ? "none" : "block", this.button.innerHTML = `<span class="govuk-visually-hidden">${i}</span><span aria-hidden="true">${n}</span>`, this.date = new Date(t) }, o.prototype.click = function (t) { this.picker.goToDate(this.date), this.picker.selectDate(this.date), t.stopPropagation(), t.preventDefault() }, o.prototype.keyPress = function (t) { let e = !0; switch (t.key) { case "ArrowLeft": this.picker.focusPreviousDay(); break; case "ArrowRight": this.picker.focusNextDay(); break; case "ArrowUp": this.picker.focusPreviousWeek(); break; case "ArrowDown": this.picker.focusNextWeek(); break; case "Home": this.picker.focusFirstDayOfWeek(); break; case "End": this.picker.focusLastDayOfWeek(); break; case "PageUp": t.shiftKey ? this.picker.focusPreviousYear(t) : this.picker.focusPreviousMonth(t); break; case "PageDown": t.shiftKey ? this.picker.focusNextYear(t) : this.picker.focusNextMonth(t); break; default: e = !1 }e && (t.preventDefault(), t.stopPropagation()) }, t.DatePicker = e, t.FilterToggleButton = function (t) { this.options = t, this.container = $(this.options.toggleButton.container), this.filterContainer = $(this.options.filter.container), this.createToggleButton(), this.setupResponsiveChecks(), this.filterContainer.attr("tabindex", "-1"), this.options.startHidden && this.hideMenu() }, t.FilterToggleButton.prototype.setupResponsiveChecks = function () { this.mq = window.matchMedia(this.options.bigModeMediaQuery), this.mq.addListener($.proxy(this, "checkMode")), this.checkMode(this.mq) }, t.FilterToggleButton.prototype.createToggleButton = function () { this.menuButton = $('<button class="govuk-button ' + this.options.toggleButton.classes + '" type="button" aria-haspopup="true" aria-expanded="false">' + this.options.toggleButton.showText + "</button>"), this.menuButton.on("click", $.proxy(this, "onMenuButtonClick")), this.container.append(this.menuButton) }, t.FilterToggleButton.prototype.checkMode = function (t) { t.matches ? this.enableBigMode() : this.enableSmallMode() }, t.FilterToggleButton.prototype.enableBigMode = function () { this.showMenu(), this.removeCloseButton() }, t.FilterToggleButton.prototype.enableSmallMode = function () { this.hideMenu(), this.addCloseButton() }, t.FilterToggleButton.prototype.addCloseButton = function () { this.options.closeButton && (this.closeButton = $('<button class="moj-filter__close" type="button">' + this.options.closeButton.text + "</button>"), this.closeButton.on("click", $.proxy(this, "onCloseClick")), $(this.options.closeButton.container).append(this.closeButton)) }, t.FilterToggleButton.prototype.onCloseClick = function () { this.hideMenu(), this.menuButton.focus() }, t.FilterToggleButton.prototype.removeCloseButton = function () { this.closeButton && (this.closeButton.remove(), this.closeButton = null) }, t.FilterToggleButton.prototype.hideMenu = function () { this.menuButton.attr("aria-expanded", "false"), this.filterContainer.addClass("moj-js-hidden"), this.menuButton.text(this.options.toggleButton.showText) }, t.FilterToggleButton.prototype.showMenu = function () { this.menuButton.attr("aria-expanded", "true"), this.filterContainer.removeClass("moj-js-hidden"), this.menuButton.text(this.options.toggleButton.hideText) }, t.FilterToggleButton.prototype.onMenuButtonClick = function () { this.toggle() }, t.FilterToggleButton.prototype.toggle = function () { "false" == this.menuButton.attr("aria-expanded") ? (this.showMenu(), this.filterContainer.focus()) : this.hideMenu() }, t.FormValidator = function (t, e) { this.form = t, this.errors = [], this.validators = [], $(this.form).on("submit", $.proxy(this, "onSubmit")), this.summary = e && e.summary ? $(e.summary) : $(".govuk-error-summary"), this.originalTitle = document.title }, t.FormValidator.entityMap = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;", "/": "&#x2F;", "`": "&#x60;", "=": "&#x3D;" }, t.FormValidator.prototype.escapeHtml = function (e) { return String(e).replace(/[&<>"'`=\/]/g, (function (e) { return t.FormValidator.entityMap[e] })) }, t.FormValidator.prototype.resetTitle = function () { document.title = this.originalTitle }, t.FormValidator.prototype.updateTitle = function () { document.title = this.errors.length + " errors - " + document.title }, t.FormValidator.prototype.showSummary = function () { this.summary.html(this.getSummaryHtml()), this.summary.removeClass("moj-hidden"), this.summary.attr("aria-labelledby", "errorSummary-heading"), this.summary.focus() }, t.FormValidator.prototype.getSummaryHtml = function () { var t = '<h2 id="error-summary-title" class="govuk-error-summary__title">There is a problem</h2>'; t += '<div class="govuk-error-summary__body">', t += '<ul class="govuk-list govuk-error-summary__list">'; for (var e = 0, o = this.errors.length; e < o; e++) { var n = this.errors[e]; t += "<li>", t += '<a href="#' + this.escapeHtml(n.fieldName) + '">', t += this.escapeHtml(n.message), t += "</a>", t += "</li>" } return t += "</ul>", t += "</div>" }, t.FormValidator.prototype.hideSummary = function () { this.summary.addClass("moj-hidden"), this.summary.removeAttr("aria-labelledby") }, t.FormValidator.prototype.onSubmit = function (t) { this.removeInlineErrors(), this.hideSummary(), this.resetTitle(), this.validate() || (t.preventDefault(), this.updateTitle(), this.showSummary(), this.showInlineErrors()) }, t.FormValidator.prototype.showInlineErrors = function () { for (var t = 0, e = this.errors.length; t < e; t++)this.showInlineError(this.errors[t]) }, t.FormValidator.prototype.showInlineError = function (e) { var o = e.fieldName + "-error", n = '<span class="govuk-error-message" id="' + o + '">' + this.escapeHtml(e.message) + "</span>", i = $("#" + e.fieldName), s = i.parents(".govuk-form-group"), a = s.find("label"), r = s.find("legend"), l = s.find("fieldset"); s.addClass("govuk-form-group--error"), r.length ? (r.after(n), s.attr("aria-invalid", "true"), t.addAttributeValue(l[0], "aria-describedby", o)) : (a.after(n), i.attr("aria-invalid", "true"), t.addAttributeValue(i[0], "aria-describedby", o)) }, t.FormValidator.prototype.removeInlineErrors = function () { for (var t = 0; t < this.errors.length; t++)this.removeInlineError(this.errors[t]) }, t.FormValidator.prototype.removeInlineError = function (e) { var o = $("#" + e.fieldName).parents(".govuk-form-group"); o.find(".govuk-error-message").remove(), o.removeClass("govuk-form-group--error"), o.find("[aria-invalid]").attr("aria-invalid", "false"); var n = e.fieldName + "-error"; t.removeAttributeValue(o.find("[aria-describedby]")[0], "aria-describedby", n) }, t.FormValidator.prototype.addValidator = function (t, e) { this.validators.push({ fieldName: t, rules: e, field: this.form.elements[t] }) }, t.FormValidator.prototype.validate = function () { this.errors = []; var t, e, o = null, n = !0; for (t = 0; t < this.validators.length; t++)for (o = this.validators[t], e = 0; e < o.rules.length; e++) { if ("boolean" == typeof (n = o.rules[e].method(o.field, o.rules[e].params)) && !n) { this.errors.push({ fieldName: o.fieldName, message: o.rules[e].message }); break } if ("string" == typeof n) { this.errors.push({ fieldName: n, message: o.rules[e].message }); break } } return 0 === this.errors.length }, t.dragAndDropSupported() && t.formDataSupported() && t.fileApiSupported() && (t.MultiFileUpload = function (t) { this.defaultParams = { uploadFileEntryHook: $.noop, uploadFileExitHook: $.noop, uploadFileErrorHook: $.noop, fileDeleteHook: $.noop, uploadStatusText: "Uploading files, please wait", dropzoneHintText: "Drag and drop files here or", dropzoneButtonText: "Choose files" }, this.params = $.extend({}, this.defaultParams, t), this.container = $(this.params.container), this.container.addClass("moj-multi-file-upload--enhanced"), this.feedbackContainer = this.container.find(".moj-multi-file__uploaded-files"), this.setupFileInput(), this.setupDropzone(), this.setupLabel(), this.setupStatusBox(), this.container.on("click", ".moj-multi-file-upload__delete", $.proxy(this, "onFileDeleteClick")) }, t.MultiFileUpload.prototype.setupDropzone = function () { this.fileInput.wrap('<div class="moj-multi-file-upload__dropzone" />'), this.dropzone = this.container.find(".moj-multi-file-upload__dropzone"), this.dropzone.on("dragover", $.proxy(this, "onDragOver")), this.dropzone.on("dragleave", $.proxy(this, "onDragLeave")), this.dropzone.on("drop", $.proxy(this, "onDrop")) }, t.MultiFileUpload.prototype.setupLabel = function () { this.label = $('<label for="' + this.fileInput[0].id + '" class="govuk-button govuk-button--secondary">' + this.params.dropzoneButtonText + "</label>"), this.dropzone.append('<p class="govuk-body">' + this.params.dropzoneHintText + "</p>"), this.dropzone.append(this.label) }, t.MultiFileUpload.prototype.setupFileInput = function () { this.fileInput = this.container.find(".moj-multi-file-upload__input"), this.fileInput.on("change", $.proxy(this, "onFileChange")), this.fileInput.on("focus", $.proxy(this, "onFileFocus")), this.fileInput.on("blur", $.proxy(this, "onFileBlur")) }, t.MultiFileUpload.prototype.setupStatusBox = function () { this.status = $('<div aria-live="polite" role="status" class="govuk-visually-hidden" />'), this.dropzone.append(this.status) }, t.MultiFileUpload.prototype.onDragOver = function (t) { t.preventDefault(), this.dropzone.addClass("moj-multi-file-upload--dragover") }, t.MultiFileUpload.prototype.onDragLeave = function () { this.dropzone.removeClass("moj-multi-file-upload--dragover") }, t.MultiFileUpload.prototype.onDrop = function (t) { t.preventDefault(), this.dropzone.removeClass("moj-multi-file-upload--dragover"), this.feedbackContainer.removeClass("moj-hidden"), this.status.html(this.params.uploadStatusText), this.uploadFiles(t.originalEvent.dataTransfer.files) }, t.MultiFileUpload.prototype.uploadFiles = function (t) { for (var e = 0; e < t.length; e++)this.uploadFile(t[e]) }, t.MultiFileUpload.prototype.onFileChange = function (t) { this.feedbackContainer.removeClass("moj-hidden"), this.status.html(this.params.uploadStatusText), this.uploadFiles(t.currentTarget.files), this.fileInput.replaceWith($(t.currentTarget).val("").clone(!0)), this.setupFileInput(), this.fileInput.focus() }, t.MultiFileUpload.prototype.onFileFocus = function (t) { this.label.addClass("moj-multi-file-upload--focused") }, t.MultiFileUpload.prototype.onFileBlur = function (t) { this.label.removeClass("moj-multi-file-upload--focused") }, t.MultiFileUpload.prototype.getSuccessHtml = function (t) { return '<span class="moj-multi-file-upload__success"> <svg class="moj-banner__icon" fill="currentColor" role="presentation" focusable="false" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25 25" height="25" width="25"><path d="M25,6.2L8.7,23.2L0,14.1l4-4.2l4.7,4.9L21,2L25,6.2z"/></svg> ' + t.messageHtml + "</span>" }, t.MultiFileUpload.prototype.getErrorHtml = function (t) { return '<span class="moj-multi-file-upload__error"> <svg class="moj-banner__icon" fill="currentColor" role="presentation" focusable="false" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25 25" height="25" width="25"><path d="M13.6,15.4h-2.3v-4.5h2.3V15.4z M13.6,19.8h-2.3v-2.2h2.3V19.8z M0,23.2h25L12.5,2L0,23.2z"/></svg> ' + t.message + "</span>" }, t.MultiFileUpload.prototype.getFileRowHtml = function (t) { var e = ""; return e += '<div class="govuk-summary-list__row moj-multi-file-upload__row">', e += ' <div class="govuk-summary-list__value moj-multi-file-upload__message">', e += '<span class="moj-multi-file-upload__filename">' + t.name + "</span>", e += '<span class="moj-multi-file-upload__progress">0%</span>', e += " </div>", e += ' <div class="govuk-summary-list__actions moj-multi-file-upload__actions"></div>', e += "</div>" }, t.MultiFileUpload.prototype.getDeleteButtonHtml = function (t) { var e = '<button class="moj-multi-file-upload__delete govuk-button govuk-button--secondary govuk-!-margin-bottom-0" type="button" name="delete" value="' + t.filename + '">'; return e += 'Delete <span class="govuk-visually-hidden">' + t.originalname + "</span>", e += "</button>" }, t.MultiFileUpload.prototype.uploadFile = function (t) { this.params.uploadFileEntryHook(this, t); var e = new FormData; e.append("documents", t); var o = $(this.getFileRowHtml(t)); this.feedbackContainer.find(".moj-multi-file-upload__list").append(o), $.ajax({ url: this.params.uploadUrl, type: "post", data: e, processData: !1, contentType: !1, success: $.proxy((function (e) { e.error ? (o.find(".moj-multi-file-upload__message").html(this.getErrorHtml(e.error)), this.status.html(e.error.message)) : (o.find(".moj-multi-file-upload__message").html(this.getSuccessHtml(e.success)), this.status.html(e.success.messageText)), o.find(".moj-multi-file-upload__actions").append(this.getDeleteButtonHtml(e.file)), this.params.uploadFileExitHook(this, t, e) }), this), error: $.proxy((function (e, o, n) { this.params.uploadFileErrorHook(this, t, e, o, n) }), this), xhr: function () { var t = new XMLHttpRequest; return t.upload.addEventListener("progress", (function (t) { if (t.lengthComputable) { var e = t.loaded / t.total; e = parseInt(100 * e, 10), o.find(".moj-multi-file-upload__progress").text(" " + e + "%") } }), !1), t } }) }, t.MultiFileUpload.prototype.onFileDeleteClick = function (t) { t.preventDefault(); var e = $(t.currentTarget), o = {}; o[e[0].name] = e[0].value, $.ajax({ url: this.params.deleteUrl, type: "post", dataType: "json", data: o, success: $.proxy((function (t) { t.error || (e.parents(".moj-multi-file-upload__row").remove(), 0 === this.feedbackContainer.find(".moj-multi-file-upload__row").length && this.feedbackContainer.addClass("moj-hidden")), this.params.fileDeleteHook(this, t) }), this) }) }), t.MultiSelect = function (t) { this.container = $(t.container), this.container.data("moj-multi-select-initialised") || (this.container.data("moj-multi-select-initialised", !0), this.toggle = $(this.getToggleHtml()), this.toggleButton = this.toggle.find("input"), this.toggleButton.on("click", $.proxy(this, "onButtonClick")), this.container.append(this.toggle), this.checkboxes = $(t.checkboxes), this.checkboxes.on("click", $.proxy(this, "onCheckboxClick")), this.checked = t.checked || !1) }, t.MultiSelect.prototype.getToggleHtml = function () { return '<div class="govuk-checkboxes__item govuk-checkboxes--small moj-multi-select__checkbox"> <input type="checkbox" class="govuk-checkboxes__input" id="checkboxes-all"> <label class="govuk-label govuk-checkboxes__label moj-multi-select__toggle-label" for="checkboxes-all"> <span class="govuk-visually-hidden">Select all</span> </label></div>' }, t.MultiSelect.prototype.onButtonClick = function (t) { this.checked ? (this.uncheckAll(), this.toggleButton[0].checked = !1) : (this.checkAll(), this.toggleButton[0].checked = !0) }, t.MultiSelect.prototype.checkAll = function () { this.checkboxes.each($.proxy((function (t, e) { e.checked = !0 }), this)), this.checked = !0 }, t.MultiSelect.prototype.uncheckAll = function () { this.checkboxes.each($.proxy((function (t, e) { e.checked = !1 }), this)), this.checked = !1 }, t.MultiSelect.prototype.onCheckboxClick = function (t) { t.target.checked ? this.checkboxes.filter(":checked").length === this.checkboxes.length && (this.toggleButton[0].checked = !0, this.checked = !0) : (this.toggleButton[0].checked = !1, this.checked = !1) }, t.PasswordReveal = function (t) { this.el = t; var e = $(this.el); e.data("moj-password-reveal-initialised") || (e.data("moj-password-reveal-initialised", !0), e.attr("spellcheck", "false"), e.wrap('<div class="moj-password-reveal"></div>'), this.container = $(this.el).parent(), this.createButton()) }, t.PasswordReveal.prototype.createButton = function () { this.button = $('<button type="button" class="govuk-button govuk-button--secondary moj-password-reveal__button">Show <span class="govuk-visually-hidden">password</span></button>'), this.container.append(this.button), this.button.on("click", $.proxy(this, "onButtonClick")) }, t.PasswordReveal.prototype.onButtonClick = function () { "password" === this.el.type ? (this.el.type = "text", this.button.html('Hide <span class="govuk-visually-hidden">password</span>')) : (this.el.type = "password", this.button.html('Show <span class="govuk-visually-hidden">password</span>')) }, "contentEditable" in document.documentElement && (t.RichTextEditor = function (t) { this.options = t, this.options.toolbar = this.options.toolbar || { bold: !1, italic: !1, underline: !1, bullets: !0, numbers: !0 }, this.textarea = this.options.textarea, this.container = $(this.textarea).parent(), this.container.data("moj-rich-text-editor-initialised") || (this.container.data("moj-rich-text-editor-initialised", !0), this.createToolbar(), this.hideDefault(), this.configureToolbar(), this.keys = { left: 37, right: 39, up: 38, down: 40 }, this.container.on("click", ".moj-rich-text-editor__toolbar-button", $.proxy(this, "onButtonClick")), this.container.find(".moj-rich-text-editor__content").on("input", $.proxy(this, "onEditorInput")), this.container.find("label").on("click", $.proxy(this, "onLabelClick")), this.toolbar.on("keydown", $.proxy(this, "onToolbarKeydown"))) }, t.RichTextEditor.prototype.onToolbarKeydown = function (t) { var e; switch (t.keyCode) { case this.keys.right: case this.keys.down: var o = (e = this.toolbar.find("button[tabindex=0]")).next("button"); o[0] && (o.focus(), e.attr("tabindex", "-1"), o.attr("tabindex", "0")); break; case this.keys.left: case this.keys.up: var n = (e = this.toolbar.find("button[tabindex=0]")).prev("button"); n[0] && (n.focus(), e.attr("tabindex", "-1"), n.attr("tabindex", "0")) } }, t.RichTextEditor.prototype.getToolbarHtml = function () { var t = ""; return t += '<div class="moj-rich-text-editor__toolbar" role="toolbar">', this.options.toolbar.bold && (t += '<button class="moj-rich-text-editor__toolbar-button moj-rich-text-editor__toolbar-button--bold" type="button" data-command="bold"><span class="govuk-visually-hidden">Bold</span></button>'), this.options.toolbar.italic && (t += '<button class="moj-rich-text-editor__toolbar-button moj-rich-text-editor__toolbar-button--italic" type="button" data-command="italic"><span class="govuk-visually-hidden">Italic</span></button>'), this.options.toolbar.underline && (t += '<button class="moj-rich-text-editor__toolbar-button moj-rich-text-editor__toolbar-button--underline" type="button" data-command="underline"><span class="govuk-visually-hidden">Underline</span></button>'), this.options.toolbar.bullets && (t += '<button class="moj-rich-text-editor__toolbar-button moj-rich-text-editor__toolbar-button--unordered-list" type="button" data-command="insertUnorderedList"><span class="govuk-visually-hidden">Unordered list</span></button>'), this.options.toolbar.numbers && (t += '<button class="moj-rich-text-editor__toolbar-button moj-rich-text-editor__toolbar-button--ordered-list" type="button" data-command="insertOrderedList"><span class="govuk-visually-hidden">Ordered list</span></button>'), t += "</div>" }, t.RichTextEditor.prototype.getEnhancedHtml = function (t) { return this.getToolbarHtml() + '<div class="govuk-textarea moj-rich-text-editor__content" contenteditable="true" spellcheck="false"></div>' }, t.RichTextEditor.prototype.hideDefault = function () { this.textarea = this.container.find("textarea"), this.textarea.addClass("govuk-visually-hidden"), this.textarea.attr("aria-hidden", !0), this.textarea.attr("tabindex", "-1") }, t.RichTextEditor.prototype.createToolbar = function () { this.toolbar = document.createElement("div"), this.toolbar.className = "moj-rich-text-editor", this.toolbar.innerHTML = this.getEnhancedHtml(), this.container.append(this.toolbar), this.toolbar = this.container.find(".moj-rich-text-editor__toolbar"), this.container.find(".moj-rich-text-editor__content").html(this.textarea.val()) }, t.RichTextEditor.prototype.configureToolbar = function () { this.buttons = this.container.find(".moj-rich-text-editor__toolbar-button"), this.buttons.prop("tabindex", "-1"), this.buttons.first().prop("tabindex", "0") }, t.RichTextEditor.prototype.onButtonClick = function (t) { document.execCommand($(t.currentTarget).data("command"), !1, null) }, t.RichTextEditor.prototype.getContent = function () { return this.container.find(".moj-rich-text-editor__content").html() }, t.RichTextEditor.prototype.onEditorInput = function (t) { this.updateTextarea() }, t.RichTextEditor.prototype.updateTextarea = function () { document.execCommand("defaultParagraphSeparator", !1, "p"), this.textarea.val(this.getContent()) }, t.RichTextEditor.prototype.onLabelClick = function (t) { t.preventDefault(), this.container.find(".moj-rich-text-editor__content").focus() }), t.SearchToggle = function (t) { this.options = t, this.container = $(this.options.search.container), this.toggleButtonContainer = $(this.options.toggleButton.container), this.container.data("moj-search-toggle-initialised") || (this.container.data("moj-search-toggle-initialised", !0), this.toggleButton = $('<button class="moj-search-toggle__button" type="button" aria-haspopup="true" aria-expanded="false">' + this.options.toggleButton.text + '<svg viewBox="0 0 20 20" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" class="moj-search-toggle__button__icon"><path d="M7.433,12.5790048 C6.06762625,12.5808611 4.75763941,12.0392925 3.79217348,11.0738265 C2.82670755,10.1083606 2.28513891,8.79837375 2.28699522,7.433 C2.28513891,6.06762625 2.82670755,4.75763941 3.79217348,3.79217348 C4.75763941,2.82670755 6.06762625,2.28513891 7.433,2.28699522 C8.79837375,2.28513891 10.1083606,2.82670755 11.0738265,3.79217348 C12.0392925,4.75763941 12.5808611,6.06762625 12.5790048,7.433 C12.5808611,8.79837375 12.0392925,10.1083606 11.0738265,11.0738265 C10.1083606,12.0392925 8.79837375,12.5808611 7.433,12.5790048 L7.433,12.5790048 Z M14.293,12.579 L13.391,12.579 L13.071,12.269 C14.2300759,10.9245158 14.8671539,9.20813198 14.866,7.433 C14.866,3.32786745 11.5381325,-1.65045755e-15 7.433,-1.65045755e-15 C3.32786745,-1.65045755e-15 -1.65045755e-15,3.32786745 -1.65045755e-15,7.433 C-1.65045755e-15,11.5381325 3.32786745,14.866 7.433,14.866 C9.208604,14.8671159 10.9253982,14.2296624 12.27,13.07 L12.579,13.39 L12.579,14.294 L18.296,20 L20,18.296 L14.294,12.579 L14.293,12.579 Z"></path></svg></button>'), this.toggleButton.on("click", $.proxy(this, "onToggleButtonClick")), this.toggleButtonContainer.append(this.toggleButton), $(document).on("click", this.onDocumentClick.bind(this)), $(document).on("focusin", this.onDocumentClick.bind(this))) }, t.SearchToggle.prototype.showMenu = function () { this.toggleButton.attr("aria-expanded", "true"), this.container.removeClass("moj-js-hidden"), this.container.find("input").first().focus() }, t.SearchToggle.prototype.hideMenu = function () { this.container.addClass("moj-js-hidden"), this.toggleButton.attr("aria-expanded", "false") }, t.SearchToggle.prototype.onToggleButtonClick = function () { "false" == this.toggleButton.attr("aria-expanded") ? this.showMenu() : this.hideMenu() }, t.SearchToggle.prototype.onDocumentClick = function (t) { $.contains(this.toggleButtonContainer[0], t.target) || $.contains(this.container[0], t.target) || this.hideMenu() }, t.SortableTable = function (t) { this.table = $(t.table), this.table.data("moj-search-toggle-initialised") || (this.table.data("moj-search-toggle-initialised", !0), this.setupOptions(t), this.body = this.table.find("tbody"), this.createHeadingButtons(), this.createStatusBox(), this.initialiseSortedColumn(), this.table.on("click", "th button", $.proxy(this, "onSortButtonClick"))) }, t.SortableTable.prototype.setupOptions = function (t) { t = t || {}, this.statusMessage = t.statusMessage || "Sort by %heading% (%direction%)", this.ascendingText = t.ascendingText || "ascending", this.descendingText = t.descendingText || "descending" }, t.SortableTable.prototype.createHeadingButtons = function () { for (var t, e = this.table.find("thead th"), o = 0; o < e.length; o++)(t = $(e[o])).attr("aria-sort") && this.createHeadingButton(t, o) }, t.SortableTable.prototype.createHeadingButton = function (t, e) { var o = t.text(), n = $('<button type="button" data-index="' + e + '">' + o + "</button>"); t.text(""), t.append(n) }, t.SortableTable.prototype.createStatusBox = function () { this.status = $('<div aria-live="polite" role="status" aria-atomic="true" class="govuk-visually-hidden" />'), this.table.parent().append(this.status) }, t.SortableTable.prototype.initialiseSortedColumn = function () { var t = this.getTableRowsArray(); this.table.find("th").filter('[aria-sort="ascending"], [aria-sort="descending"]').first().each(((e, o) => { var n = $(o).attr("aria-sort"), i = $(o).find("button").attr("data-index"), s = this.sort(t, i, n); this.addRows(s) })) }, t.SortableTable.prototype.onSortButtonClick = function (t) { var e, o = t.currentTarget.getAttribute("data-index"), n = $(t.currentTarget).parent().attr("aria-sort"); e = "none" === n || "descending" === n ? "ascending" : "descending"; var i = this.getTableRowsArray(), s = this.sort(i, o, e); this.addRows(s), this.removeButtonStates(), this.updateButtonState($(t.currentTarget), e) }, t.SortableTable.prototype.updateButtonState = function (t, e) { t.parent().attr("aria-sort", e); var o = this.statusMessage; o = (o = o.replace(/%heading%/, t.text())).replace(/%direction%/, this[e + "Text"]), this.status.text(o) }, t.SortableTable.prototype.removeButtonStates = function () { this.table.find("thead th").attr("aria-sort", "none") }, t.SortableTable.prototype.addRows = function (t) { for (var e = 0; e < t.length; e++)this.body.append(t[e]) }, t.SortableTable.prototype.getTableRowsArray = function () { for (var t = [], e = this.body.find("tr"), o = 0; o < e.length; o++)t.push(e[o]); return t }, t.SortableTable.prototype.sort = function (t, e, o) { return t.sort(function (t, n) { var i = $(t).find("td,th").eq(e), s = $(n).find("td,th").eq(e), a = "ascending" === o ? this.getCellValue(i) : this.getCellValue(s), r = "ascending" === o ? this.getCellValue(s) : this.getCellValue(i); return "string" == typeof a || "string" == typeof r ? a.toString().localeCompare(r.toString()) : a - r }.bind(this)) }, t.SortableTable.prototype.getCellValue = function (t) { var e = t.attr("data-sort-value") || t.html(), o = parseFloat(e); return isNaN(o) ? e : o }, t }, "function" == typeof define && define.amd ? define([], n) : "object" == typeof t ? e.exports = n() : o.MOJFrontend = n() } }), u = a({ "node_modules/clipboard/dist/clipboard.js"(t, e) { var o, n; o = t, n = function () { return function () { var t = { 686: function (t, e, o) { "use strict"; o.d(e, { default: function () { return x } }); var n = o(279), i = o.n(n), s = o(370), a = o.n(s), r = o(817), l = o.n(r); function u(t) { try { return document.execCommand(t) } catch (t) { return !1 } } var c = function (t) { var e = l()(t); return u("cut"), e }, d = function (t, e) { var o = function (t) { var e = "rtl" === document.documentElement.getAttribute("dir"), o = document.createElement("textarea"); o.style.fontSize = "12pt", o.style.border = "0", o.style.padding = "0", o.style.margin = "0", o.style.position = "absolute", o.style[e ? "right" : "left"] = "-9999px"; var n = window.pageYOffset || document.documentElement.scrollTop; return o.style.top = "".concat(n, "px"), o.setAttribute("readonly", ""), o.value = t, o }(t); e.container.appendChild(o); var n = l()(o); return u("copy"), o.remove(), n }, h = function (t) { var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : { container: document.body }, o = ""; return "string" == typeof t ? o = d(t, e) : t instanceof HTMLInputElement && !["text", "search", "url", "tel", "password"].includes(null == t ? void 0 : t.type) ? o = d(t.value, e) : (o = l()(t), u("copy")), o }; function p(t) { return (p = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t })(t) } var m = function () { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, e = t.action, o = void 0 === e ? "copy" : e, n = t.container, i = t.target, s = t.text; if ("copy" !== o && "cut" !== o) throw new Error('Invalid "action" value, use either "copy" or "cut"'); if (void 0 !== i) { if (!i || "object" !== p(i) || 1 !== i.nodeType) throw new Error('Invalid "target" value, use a valid Element'); if ("copy" === o && i.hasAttribute("disabled")) throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute'); if ("cut" === o && (i.hasAttribute("readonly") || i.hasAttribute("disabled"))) throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes') } return s ? h(s, { container: n }) : i ? "cut" === o ? c(i) : h(i, { container: n }) : void 0 }; function f(t) { return (f = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t })(t) } function g(t, e) { for (var o = 0; o < e.length; o++) { var n = e[o]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } function b(t, e) { return (b = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t })(t, e) } function y(t) { var e = function () { if ("undefined" == typeof Reflect || !Reflect.construct) return !1; if (Reflect.construct.sham) return !1; if ("function" == typeof Proxy) return !0; try { return Date.prototype.toString.call(Reflect.construct(Date, [], (function () { }))), !0 } catch (t) { return !1 } }(); return function () { var o, n, i, s = v(t); if (e) { var a = v(this).constructor; o = Reflect.construct(s, arguments, a) } else o = s.apply(this, arguments); return n = this, !(i = o) || "object" !== f(i) && "function" != typeof i ? function (t) { if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return t }(n) : i } } function v(t) { return (v = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) { return t.__proto__ || Object.getPrototypeOf(t) })(t) } function k(t, e) { var o = "data-clipboard-".concat(t); if (e.hasAttribute(o)) return e.getAttribute(o) } var w = function (t) { !function (t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), e && b(t, e) }(s, t); var e, o, n, i = y(s); function s(t, e) { var o; return function (t, e) { if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function") }(this, s), (o = i.call(this)).resolveOptions(e), o.listenClick(t), o } return e = s, o = [{ key: "resolveOptions", value: function () { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; this.action = "function" == typeof t.action ? t.action : this.defaultAction, this.target = "function" == typeof t.target ? t.target : this.defaultTarget, this.text = "function" == typeof t.text ? t.text : this.defaultText, this.container = "object" === f(t.container) ? t.container : document.body } }, { key: "listenClick", value: function (t) { var e = this; this.listener = a()(t, "click", (function (t) { return e.onClick(t) })) } }, { key: "onClick", value: function (t) { var e = t.delegateTarget || t.currentTarget, o = this.action(e) || "copy", n = m({ action: o, container: this.container, target: this.target(e), text: this.text(e) }); this.emit(n ? "success" : "error", { action: o, text: n, trigger: e, clearSelection: function () { e && e.focus(), window.getSelection().removeAllRanges() } }) } }, { key: "defaultAction", value: function (t) { return k("action", t) } }, { key: "defaultTarget", value: function (t) { var e = k("target", t); if (e) return document.querySelector(e) } }, { key: "defaultText", value: function (t) { return k("text", t) } }, { key: "destroy", value: function () { this.listener.destroy() } }], n = [{ key: "copy", value: function (t) { var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : { container: document.body }; return h(t, e) } }, { key: "cut", value: function (t) { return c(t) } }, { key: "isSupported", value: function () { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ["copy", "cut"], e = "string" == typeof t ? [t] : t, o = !!document.queryCommandSupported; return e.forEach((function (t) { o = o && !!document.queryCommandSupported(t) })), o } }], o && g(e.prototype, o), n && g(e, n), s }(i()), x = w }, 828: function (t) { if ("undefined" != typeof Element && !Element.prototype.matches) { var e = Element.prototype; e.matches = e.matchesSelector || e.mozMatchesSelector || e.msMatchesSelector || e.oMatchesSelector || e.webkitMatchesSelector } t.exports = function (t, e) { for (; t && 9 !== t.nodeType;) { if ("function" == typeof t.matches && t.matches(e)) return t; t = t.parentNode } } }, 438: function (t, e, o) { var n = o(828); function i(t, e, o, n, i) { var a = s.apply(this, arguments); return t.addEventListener(o, a, i), { destroy: function () { t.removeEventListener(o, a, i) } } } function s(t, e, o, i) { return function (o) { o.delegateTarget = n(o.target, e), o.delegateTarget && i.call(t, o) } } t.exports = function (t, e, o, n, s) { return "function" == typeof t.addEventListener ? i.apply(null, arguments) : "function" == typeof o ? i.bind(null, document).apply(null, arguments) : ("string" == typeof t && (t = document.querySelectorAll(t)), Array.prototype.map.call(t, (function (t) { return i(t, e, o, n, s) }))) } }, 879: function (t, e) { e.node = function (t) { return void 0 !== t && t instanceof HTMLElement && 1 === t.nodeType }, e.nodeList = function (t) { var o = Object.prototype.toString.call(t); return void 0 !== t && ("[object NodeList]" === o || "[object HTMLCollection]" === o) && "length" in t && (0 === t.length || e.node(t[0])) }, e.string = function (t) { return "string" == typeof t || t instanceof String }, e.fn = function (t) { return "[object Function]" === Object.prototype.toString.call(t) } }, 370: function (t, e, o) { var n = o(879), i = o(438); t.exports = function (t, e, o) { if (!t && !e && !o) throw new Error("Missing required arguments"); if (!n.string(e)) throw new TypeError("Second argument must be a String"); if (!n.fn(o)) throw new TypeError("Third argument must be a Function"); if (n.node(t)) return function (t, e, o) { return t.addEventListener(e, o), { destroy: function () { t.removeEventListener(e, o) } } }(t, e, o); if (n.nodeList(t)) return function (t, e, o) { return Array.prototype.forEach.call(t, (function (t) { t.addEventListener(e, o) })), { destroy: function () { Array.prototype.forEach.call(t, (function (t) { t.removeEventListener(e, o) })) } } }(t, e, o); if (n.string(t)) return function (t, e, o) { return i(document.body, t, e, o) }(t, e, o); throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList") } }, 817: function (t) { t.exports = function (t) { var e; if ("SELECT" === t.nodeName) t.focus(), e = t.value; else if ("INPUT" === t.nodeName || "TEXTAREA" === t.nodeName) { var o = t.hasAttribute("readonly"); o || t.setAttribute("readonly", ""), t.select(), t.setSelectionRange(0, t.value.length), o || t.removeAttribute("readonly"), e = t.value } else { t.hasAttribute("contenteditable") && t.focus(); var n = window.getSelection(), i = document.createRange(); i.selectNodeContents(t), n.removeAllRanges(), n.addRange(i), e = n.toString() } return e } }, 279: function (t) { function e() { } e.prototype = { on: function (t, e, o) { var n = this.e || (this.e = {}); return (n[t] || (n[t] = [])).push({ fn: e, ctx: o }), this }, once: function (t, e, o) { var n = this; function i() { n.off(t, i), e.apply(o, arguments) } return i._ = e, this.on(t, i, o) }, emit: function (t) { for (var e = [].slice.call(arguments, 1), o = ((this.e || (this.e = {}))[t] || []).slice(), n = 0, i = o.length; n < i; n++)o[n].fn.apply(o[n].ctx, e); return this }, off: function (t, e) { var o = this.e || (this.e = {}), n = o[t], i = []; if (n && e) for (var s = 0, a = n.length; s < a; s++)n[s].fn !== e && n[s].fn._ !== e && i.push(n[s]); return i.length ? o[t] = i : delete o[t], this } }, t.exports = e, t.exports.TinyEmitter = e } }, e = {}; function o(n) { if (e[n]) return e[n].exports; var i = e[n] = { exports: {} }; return t[n](i, i.exports, o), i.exports } return o.n = function (t) { var e = t && t.__esModule ? function () { return t.default } : function () { return t }; return o.d(e, { a: e }), e }, o.d = function (t, e) { for (var n in e) o.o(e, n) && !o.o(t, n) && Object.defineProperty(t, n, { enumerable: !0, get: e[n] }) }, o.o = function (t, e) { return Object.prototype.hasOwnProperty.call(t, e) }, o(686) }().default }, "object" == typeof t && "object" == typeof e ? e.exports = n() : "function" == typeof define && define.amd ? define([], n) : "object" == typeof t ? t.ClipboardJS = n() : o.ClipboardJS = n() } }); function c(t, e) { const o = t ? t.trim() : ""; let n, i = null == e ? void 0 : e.type; switch (i || (["true", "false"].includes(o) && (i = "boolean"), o.length > 0 && isFinite(Number(o)) && (i = "number")), i) { case "boolean": n = "true" === o; break; case "number": n = Number(o); break; default: n = t }return n } function d(...t) { const e = {}; for (const o of t) for (const t of Object.keys(o)) { const n = e[t], i = o[t]; b(n) && b(i) ? e[t] = d(n, i) : e[t] = i } return e } function h(t, e, o) { const n = t.schema.properties[o]; if ("object" !== (null == n ? void 0 : n.type)) return; const i = { [o]: {} }; for (const [t, n] of Object.entries(e)) { let e = i; const s = t.split("."); for (const [i, a] of s.entries()) "object" == typeof e && (i < s.length - 1 ? (b(e[a]) || (e[a] = {}), e = e[a]) : t !== o && (e[a] = c(n))) } return i[o] } function p(t) { if (t.includes("#")) return t.split("#").pop() } function m(t) { const e = `--govuk-frontend-breakpoint-${t}`; return { property: e, value: window.getComputedStyle(document.documentElement).getPropertyValue(e) || void 0 } } function f(t, e = {}) { var o; const n = t.getAttribute("tabindex"); function i() { var o; null == (o = e.onBlur) || o.call(t), n || t.removeAttribute("tabindex") } n || t.setAttribute("tabindex", "-1"), t.addEventListener("focus", (function () { t.addEventListener("blur", i, { once: !0 }) }), { once: !0 }), null == (o = e.onBeforeFocus) || o.call(t), t.focus() } function g(t = document.body) { return !!t && t.classList.contains("govuk-frontend-supported") } function b(t) { return !!t && "object" == typeof t && !function (t) { return Array.isArray(t) }(t) } function y(t, e) { const o = {}; for (const [n, i] of Object.entries(t.schema.properties)) n in e && (o[n] = c(e[n], i)), "object" === (null == i ? void 0 : i.type) && (o[n] = h(t, e, n)); return o } var v = class extends Error { constructor(...t) { super(...t), this.name = "GOVUKFrontendError" } }, k = class extends v { constructor(t = document.body) { const e = "noModule" in HTMLScriptElement.prototype ? 'GOV.UK Frontend initialised without `<body class="govuk-frontend-supported">` from template `<script>` snippet' : "GOV.UK Frontend is not supported in this browser"; super(t ? e : 'GOV.UK Frontend initialised without `<script type="module">`'), this.name = "SupportError" } }, w = class extends v { constructor(...t) { super(...t), this.name = "ConfigError" } }, x = class extends v { constructor(t) { let e = "string" == typeof t ? t : ""; if ("object" == typeof t) { const { componentName: o, identifier: n, element: i, expectedType: s } = t; e = `${o}: ${n}`, e += i ? ` is not of type ${null != s ? s : "HTMLElement"}` : " not found" } super(e), this.name = "ElementError" } }, C = class { constructor() { this.checkSupport() } checkSupport() { if (!g()) throw new k } }, T = class t { constructor(t = {}, e = {}) { var o; this.translations = void 0, this.locale = void 0, this.translations = t, this.locale = null != (o = e.locale) ? o : document.documentElement.lang || "en" } t(t, e) { if (!t) throw new Error("i18n: lookup key missing"); let o = this.translations[t]; if ("number" == typeof (null == e ? void 0 : e.count) && "object" == typeof o) { const n = o[this.getPluralSuffix(t, e.count)]; n && (o = n) } if ("string" == typeof o) { if (o.match(/%{(.\S+)}/)) { if (!e) throw new Error("i18n: cannot replace placeholders in string if no option data provided"); return this.replacePlaceholders(o, e) } return o } return t } replacePlaceholders(t, e) { const o = Intl.NumberFormat.supportedLocalesOf(this.locale).length ? new Intl.NumberFormat(this.locale) : void 0; return t.replace(/%{(.\S+)}/g, (function (t, n) { if (Object.prototype.hasOwnProperty.call(e, n)) { const t = e[n]; return !1 === t || "number" != typeof t && "string" != typeof t ? "" : "number" == typeof t ? o ? o.format(t) : `${t}` : t } throw new Error(`i18n: no data found to replace ${t} placeholder in string`) })) } hasIntlPluralRulesSupport() { return Boolean("PluralRules" in window.Intl && Intl.PluralRules.supportedLocalesOf(this.locale).length) } getPluralSuffix(t, e) { if (e = Number(e), !isFinite(e)) return "other"; const o = this.translations[t], n = this.hasIntlPluralRulesSupport() ? new Intl.PluralRules(this.locale).select(e) : this.selectPluralFormUsingFallbackRules(e); if ("object" == typeof o) { if (n in o) return n; if ("other" in o) return console.warn(`i18n: Missing plural form ".${n}" for "${this.locale}" locale. Falling back to ".other".`), "other" } throw new Error(`i18n: Plural form ".other" is required for "${this.locale}" locale`) } selectPluralFormUsingFallbackRules(e) { e = Math.abs(Math.floor(e)); const o = this.getPluralRulesForLocale(); return o ? t.pluralRules[o](e) : "other" } getPluralRulesForLocale() { const e = this.locale.split("-")[0]; for (const o in t.pluralRulesMap) { const n = t.pluralRulesMap[o]; if (n.includes(this.locale) || n.includes(e)) return o } } }; T.pluralRulesMap = { arabic: ["ar"], chinese: ["my", "zh", "id", "ja", "jv", "ko", "ms", "th", "vi"], french: ["hy", "bn", "fr", "gu", "hi", "fa", "pa", "zu"], german: ["af", "sq", "az", "eu", "bg", "ca", "da", "nl", "en", "et", "fi", "ka", "de", "el", "hu", "lb", "no", "so", "sw", "sv", "ta", "te", "tr", "ur"], irish: ["ga"], russian: ["ru", "uk"], scottish: ["gd"], spanish: ["pt-PT", "it", "es"], welsh: ["cy"] }, T.pluralRules = { arabic: t => 0 === t ? "zero" : 1 === t ? "one" : 2 === t ? "two" : t % 100 >= 3 && t % 100 <= 10 ? "few" : t % 100 >= 11 && t % 100 <= 99 ? "many" : "other", chinese: () => "other", french: t => 0 === t || 1 === t ? "one" : "other", german: t => 1 === t ? "one" : "other", irish: t => 1 === t ? "one" : 2 === t ? "two" : t >= 3 && t <= 6 ? "few" : t >= 7 && t <= 10 ? "many" : "other", russian(t) { const e = t % 100, o = e % 10; return 1 === o && 11 !== e ? "one" : o >= 2 && o <= 4 && !(e >= 12 && e <= 14) ? "few" : 0 === o || o >= 5 && o <= 9 || e >= 11 && e <= 14 ? "many" : "other" }, scottish: t => 1 === t || 11 === t ? "one" : 2 === t || 12 === t ? "two" : t >= 3 && t <= 10 || t >= 13 && t <= 19 ? "few" : "other", spanish: t => 1 === t ? "one" : t % 1e6 == 0 && 0 !== t ? "many" : "other", welsh: t => 0 === t ? "zero" : 1 === t ? "one" : 2 === t ? "two" : 3 === t ? "few" : 6 === t ? "many" : "other" }; var S = class t extends C { constructor(e, o = {}) { if (super(), this.$module = void 0, this.config = void 0, this.i18n = void 0, this.controlsClass = "govuk-accordion__controls", this.showAllClass = "govuk-accordion__show-all", this.showAllTextClass = "govuk-accordion__show-all-text", this.sectionClass = "govuk-accordion__section", this.sectionExpandedClass = "govuk-accordion__section--expanded", this.sectionButtonClass = "govuk-accordion__section-button", this.sectionHeaderClass = "govuk-accordion__section-header", this.sectionHeadingClass = "govuk-accordion__section-heading", this.sectionHeadingDividerClass = "govuk-accordion__section-heading-divider", this.sectionHeadingTextClass = "govuk-accordion__section-heading-text", this.sectionHeadingTextFocusClass = "govuk-accordion__section-heading-text-focus", this.sectionShowHideToggleClass = "govuk-accordion__section-toggle", this.sectionShowHideToggleFocusClass = "govuk-accordion__section-toggle-focus", this.sectionShowHideTextClass = "govuk-accordion__section-toggle-text", this.upChevronIconClass = "govuk-accordion-nav__chevron", this.downChevronIconClass = "govuk-accordion-nav__chevron--down", this.sectionSummaryClass = "govuk-accordion__section-summary", this.sectionSummaryFocusClass = "govuk-accordion__section-summary-focus", this.sectionContentClass = "govuk-accordion__section-content", this.$sections = void 0, this.$showAllButton = null, this.$showAllIcon = null, this.$showAllText = null, !(e instanceof HTMLElement)) throw new x({ componentName: "Accordion", element: e, identifier: "Root element (`$module`)" }); this.$module = e, this.config = d(t.defaults, o, y(t, e.dataset)), this.i18n = new T(this.config.i18n); const n = this.$module.querySelectorAll(`.${this.sectionClass}`); if (!n.length) throw new x({ componentName: "Accordion", identifier: `Sections (\`<div class="${this.sectionClass}">\`)` }); this.$sections = n, this.initControls(), this.initSectionHeaders(), this.updateShowAllButton(this.areAllSectionsOpen()) } initControls() { this.$showAllButton = document.createElement("button"), this.$showAllButton.setAttribute("type", "button"), this.$showAllButton.setAttribute("class", this.showAllClass), this.$showAllButton.setAttribute("aria-expanded", "false"), this.$showAllIcon = document.createElement("span"), this.$showAllIcon.classList.add(this.upChevronIconClass), this.$showAllButton.appendChild(this.$showAllIcon); const t = document.createElement("div"); t.setAttribute("class", this.controlsClass), t.appendChild(this.$showAllButton), this.$module.insertBefore(t, this.$module.firstChild), this.$showAllText = document.createElement("span"), this.$showAllText.classList.add(this.showAllTextClass), this.$showAllButton.appendChild(this.$showAllText), this.$showAllButton.addEventListener("click", (() => this.onShowOrHideAllToggle())), "onbeforematch" in document && document.addEventListener("beforematch", (t => this.onBeforeMatch(t))) } initSectionHeaders() { this.$sections.forEach(((t, e) => { const o = t.querySelector(`.${this.sectionHeaderClass}`); if (!o) throw new x({ componentName: "Accordion", identifier: `Section headers (\`<div class="${this.sectionHeaderClass}">\`)` }); this.constructHeaderMarkup(o, e), this.setExpanded(this.isExpanded(t), t), o.addEventListener("click", (() => this.onSectionToggle(t))), this.setInitialState(t) })) } constructHeaderMarkup(t, e) { const o = t.querySelector(`.${this.sectionButtonClass}`), n = t.querySelector(`.${this.sectionHeadingClass}`), i = t.querySelector(`.${this.sectionSummaryClass}`); if (!n) throw new x({ componentName: "Accordion", identifier: `Section heading (\`.${this.sectionHeadingClass}\`)` }); if (!o) throw new x({ componentName: "Accordion", identifier: `Section button placeholder (\`<span class="${this.sectionButtonClass}">\`)` }); const s = document.createElement("button"); s.setAttribute("type", "button"), s.setAttribute("aria-controls", `${this.$module.id}-content-${e + 1}`); for (const t of Array.from(o.attributes)) "id" !== t.name && s.setAttribute(t.name, t.value); const a = document.createElement("span"); a.classList.add(this.sectionHeadingTextClass), a.id = o.id; const r = document.createElement("span"); r.classList.add(this.sectionHeadingTextFocusClass), a.appendChild(r), Array.from(o.childNodes).forEach((t => r.appendChild(t))); const l = document.createElement("span"); l.classList.add(this.sectionShowHideToggleClass), l.setAttribute("data-nosnippet", ""); const u = document.createElement("span"); u.classList.add(this.sectionShowHideToggleFocusClass), l.appendChild(u); const c = document.createElement("span"), d = document.createElement("span"); if (d.classList.add(this.upChevronIconClass), u.appendChild(d), c.classList.add(this.sectionShowHideTextClass), u.appendChild(c), s.appendChild(a), s.appendChild(this.getButtonPunctuationEl()), i) { const t = document.createElement("span"), e = document.createElement("span"); e.classList.add(this.sectionSummaryFocusClass), t.appendChild(e); for (const e of Array.from(i.attributes)) t.setAttribute(e.name, e.value); Array.from(i.childNodes).forEach((t => e.appendChild(t))), i.remove(), s.appendChild(t), s.appendChild(this.getButtonPunctuationEl()) } s.appendChild(l), n.removeChild(o), n.appendChild(s) } onBeforeMatch(t) { const e = t.target; if (!(e instanceof Element)) return; const o = e.closest(`.${this.sectionClass}`); o && this.setExpanded(!0, o) } onSectionToggle(t) { const e = !this.isExpanded(t); this.setExpanded(e, t), this.storeState(t, e) } onShowOrHideAllToggle() { const t = !this.areAllSectionsOpen(); this.$sections.forEach((e => { this.setExpanded(t, e), this.storeState(e, t) })), this.updateShowAllButton(t) } setExpanded(t, e) { const o = e.querySelector(`.${this.upChevronIconClass}`), n = e.querySelector(`.${this.sectionShowHideTextClass}`), i = e.querySelector(`.${this.sectionButtonClass}`), s = e.querySelector(`.${this.sectionContentClass}`); if (!s) throw new x({ componentName: "Accordion", identifier: `Section content (\`<div class="${this.sectionContentClass}">\`)` }); if (!o || !n || !i) return; const a = t ? this.i18n.t("hideSection") : this.i18n.t("showSection"); n.textContent = a, i.setAttribute("aria-expanded", `${t}`); const r = [], l = e.querySelector(`.${this.sectionHeadingTextClass}`); l && r.push(`${l.textContent}`.trim()); const u = e.querySelector(`.${this.sectionSummaryClass}`); u && r.push(`${u.textContent}`.trim()); const c = t ? this.i18n.t("hideSectionAriaLabel") : this.i18n.t("showSectionAriaLabel"); r.push(c), i.setAttribute("aria-label", r.join(" , ")), t ? (s.removeAttribute("hidden"), e.classList.add(this.sectionExpandedClass), o.classList.remove(this.downChevronIconClass)) : (s.setAttribute("hidden", "until-found"), e.classList.remove(this.sectionExpandedClass), o.classList.add(this.downChevronIconClass)), this.updateShowAllButton(this.areAllSectionsOpen()) } isExpanded(t) { return t.classList.contains(this.sectionExpandedClass) } areAllSectionsOpen() { return Array.from(this.$sections).every((t => this.isExpanded(t))) } updateShowAllButton(t) { this.$showAllButton && this.$showAllText && this.$showAllIcon && (this.$showAllButton.setAttribute("aria-expanded", t.toString()), this.$showAllText.textContent = t ? this.i18n.t("hideAllSections") : this.i18n.t("showAllSections"), this.$showAllIcon.classList.toggle(this.downChevronIconClass, !t)) } getIdentifier(t) { const e = t.querySelector(`.${this.sectionButtonClass}`); return null == e ? void 0 : e.getAttribute("aria-controls") } storeState(t, e) { if (!this.config.rememberExpanded) return; const o = this.getIdentifier(t); if (o) try { window.sessionStorage.setItem(o, e.toString()) } catch (t) { } } setInitialState(t) { if (!this.config.rememberExpanded) return; const e = this.getIdentifier(t); if (e) try { const o = window.sessionStorage.getItem(e); null !== o && this.setExpanded("true" === o, t) } catch (t) { } } getButtonPunctuationEl() { const t = document.createElement("span"); return t.classList.add("govuk-visually-hidden", this.sectionHeadingDividerClass), t.textContent = ", ", t } }; S.moduleName = "govuk-accordion", S.defaults = Object.freeze({ i18n: { hideAllSections: "Hide all sections", hideSection: "Hide", hideSectionAriaLabel: "Hide this section", showAllSections: "Show all sections", showSection: "Show", showSectionAriaLabel: "Show this section" }, rememberExpanded: !0 }), S.schema = Object.freeze({ properties: { i18n: { type: "object" }, rememberExpanded: { type: "boolean" } } }); var _ = class t extends C { constructor(e, o = {}) { if (super(), this.$module = void 0, this.config = void 0, this.debounceFormSubmitTimer = null, !(e instanceof HTMLElement)) throw new x({ componentName: "Button", element: e, identifier: "Root element (`$module`)" }); this.$module = e, this.config = d(t.defaults, o, y(t, e.dataset)), this.$module.addEventListener("keydown", (t => this.handleKeyDown(t))), this.$module.addEventListener("click", (t => this.debounce(t))) } handleKeyDown(t) { const e = t.target; " " === t.key && e instanceof HTMLElement && "button" === e.getAttribute("role") && (t.preventDefault(), e.click()) } debounce(t) { if (this.config.preventDoubleClick) return this.debounceFormSubmitTimer ? (t.preventDefault(), !1) : void (this.debounceFormSubmitTimer = window.setTimeout((() => { this.debounceFormSubmitTimer = null }), 1e3)) } }; function A(t, e) { const o = t.closest(`[${e}]`); return o ? o.getAttribute(e) : null } _.moduleName = "govuk-button", _.defaults = Object.freeze({ preventDoubleClick: !1 }), _.schema = Object.freeze({ properties: { preventDoubleClick: { type: "boolean" } } }); var E = class t extends C { constructor(e, o = {}) { var n, i; if (super(), this.$module = void 0, this.$textarea = void 0, this.$visibleCountMessage = void 0, this.$screenReaderCountMessage = void 0, this.lastInputTimestamp = null, this.lastInputValue = "", this.valueChecker = null, this.config = void 0, this.i18n = void 0, this.maxLength = void 0, !(e instanceof HTMLElement)) throw new x({ componentName: "Character count", element: e, identifier: "Root element (`$module`)" }); const s = e.querySelector(".govuk-js-character-count"); if (!(s instanceof HTMLTextAreaElement || s instanceof HTMLInputElement)) throw new x({ componentName: "Character count", element: s, expectedType: "HTMLTextareaElement or HTMLInputElement", identifier: "Form field (`.govuk-js-character-count`)" }); const a = y(t, e.dataset); let r = {}; ("maxwords" in a || "maxlength" in a) && (r = { maxlength: void 0, maxwords: void 0 }), this.config = d(t.defaults, o, r, a); const l = function (t, e) { const o = []; for (const [n, i] of Object.entries(t)) { const t = []; if (Array.isArray(i)) { for (const { required: o, errorMessage: n } of i) o.every((t => !!e[t])) || t.push(n); "anyOf" !== n || i.length - t.length >= 1 || o.push(...t) } } return o }(t.schema, this.config); if (l[0]) throw new w(`Character count: ${l[0]}`); this.i18n = new T(this.config.i18n, { locale: A(e, "lang") }), this.maxLength = null != (n = null != (i = this.config.maxwords) ? i : this.config.maxlength) ? n : 1 / 0, this.$module = e, this.$textarea = s; const u = `${this.$textarea.id}-info`, c = document.getElementById(u); if (!c) throw new x({ componentName: "Character count", element: c, identifier: `Count message (\`id="${u}"\`)` }); `${c.textContent}`.match(/^\s*$/) && (c.textContent = this.i18n.t("textareaDescription", { count: this.maxLength })), this.$textarea.insertAdjacentElement("afterend", c); const h = document.createElement("div"); h.className = "govuk-character-count__sr-status govuk-visually-hidden", h.setAttribute("aria-live", "polite"), this.$screenReaderCountMessage = h, c.insertAdjacentElement("afterend", h); const p = document.createElement("div"); p.className = c.className, p.classList.add("govuk-character-count__status"), p.setAttribute("aria-hidden", "true"), this.$visibleCountMessage = p, c.insertAdjacentElement("afterend", p), c.classList.add("govuk-visually-hidden"), this.$textarea.removeAttribute("maxlength"), this.bindChangeEvents(), window.addEventListener("pageshow", (() => this.updateCountMessage())), this.updateCountMessage() } bindChangeEvents() { this.$textarea.addEventListener("keyup", (() => this.handleKeyUp())), this.$textarea.addEventListener("focus", (() => this.handleFocus())), this.$textarea.addEventListener("blur", (() => this.handleBlur())) } handleKeyUp() { this.updateVisibleCountMessage(), this.lastInputTimestamp = Date.now() } handleFocus() { this.valueChecker = window.setInterval((() => { (!this.lastInputTimestamp || Date.now() - 500 >= this.lastInputTimestamp) && this.updateIfValueChanged() }), 1e3) } handleBlur() { this.valueChecker && window.clearInterval(this.valueChecker) } updateIfValueChanged() { this.$textarea.value !== this.lastInputValue && (this.lastInputValue = this.$textarea.value, this.updateCountMessage()) } updateCountMessage() { this.updateVisibleCountMessage(), this.updateScreenReaderCountMessage() } updateVisibleCountMessage() { const t = this.maxLength - this.count(this.$textarea.value) < 0; this.$visibleCountMessage.classList.toggle("govuk-character-count__message--disabled", !this.isOverThreshold()), this.$textarea.classList.toggle("govuk-textarea--error", t), this.$visibleCountMessage.classList.toggle("govuk-error-message", t), this.$visibleCountMessage.classList.toggle("govuk-hint", !t), this.$visibleCountMessage.textContent = this.getCountMessage() } updateScreenReaderCountMessage() { this.isOverThreshold() ? this.$screenReaderCountMessage.removeAttribute("aria-hidden") : this.$screenReaderCountMessage.setAttribute("aria-hidden", "true"), this.$screenReaderCountMessage.textContent = this.getCountMessage() } count(t) { if (this.config.maxwords) { var e; return (null != (e = t.match(/\S+/g)) ? e : []).length } return t.length } getCountMessage() { const t = this.maxLength - this.count(this.$textarea.value), e = this.config.maxwords ? "words" : "characters"; return this.formatCountMessage(t, e) } formatCountMessage(t, e) { if (0 === t) return this.i18n.t(`${e}AtLimit`); const o = t < 0 ? "OverLimit" : "UnderLimit"; return this.i18n.t(`${e}${o}`, { count: Math.abs(t) }) } isOverThreshold() { if (!this.config.threshold) return !0; const t = this.count(this.$textarea.value); return this.maxLength * this.config.threshold / 100 <= t } }; E.moduleName = "govuk-character-count", E.defaults = Object.freeze({ threshold: 0, i18n: { charactersUnderLimit: { one: "You have %{count} character remaining", other: "You have %{count} characters remaining" }, charactersAtLimit: "You have 0 characters remaining", charactersOverLimit: { one: "You have %{count} character too many", other: "You have %{count} characters too many" }, wordsUnderLimit: { one: "You have %{count} word remaining", other: "You have %{count} words remaining" }, wordsAtLimit: "You have 0 words remaining", wordsOverLimit: { one: "You have %{count} word too many", other: "You have %{count} words too many" }, textareaDescription: { other: "" } } }), E.schema = Object.freeze({ properties: { i18n: { type: "object" }, maxwords: { type: "number" }, maxlength: { type: "number" }, threshold: { type: "number" } }, anyOf: [{ required: ["maxwords"], errorMessage: 'Either "maxlength" or "maxwords" must be provided' }, { required: ["maxlength"], errorMessage: 'Either "maxlength" or "maxwords" must be provided' }] }); var L = class extends C { constructor(t) { if (super(), this.$module = void 0, this.$inputs = void 0, !(t instanceof HTMLElement)) throw new x({ componentName: "Checkboxes", element: t, identifier: "Root element (`$module`)" }); const e = t.querySelectorAll('input[type="checkbox"]'); if (!e.length) throw new x({ componentName: "Checkboxes", identifier: 'Form inputs (`<input type="checkbox">`)' }); this.$module = t, this.$inputs = e, this.$inputs.forEach((t => { const e = t.getAttribute("data-aria-controls"); if (e) { if (!document.getElementById(e)) throw new x({ componentName: "Checkboxes", identifier: `Conditional reveal (\`id="${e}"\`)` }); t.setAttribute("aria-controls", e), t.removeAttribute("data-aria-controls") } })), window.addEventListener("pageshow", (() => this.syncAllConditionalReveals())), this.syncAllConditionalReveals(), this.$module.addEventListener("click", (t => this.handleClick(t))) } syncAllConditionalReveals() { this.$inputs.forEach((t => this.syncConditionalRevealWithInputState(t))) } syncConditionalRevealWithInputState(t) { const e = t.getAttribute("aria-controls"); if (!e) return; const o = document.getElementById(e); if (null != o && o.classList.contains("govuk-checkboxes__conditional")) { const e = t.checked; t.setAttribute("aria-expanded", e.toString()), o.classList.toggle("govuk-checkboxes__conditional--hidden", !e) } } unCheckAllInputsExcept(t) { document.querySelectorAll(`input[type="checkbox"][name="${t.name}"]`).forEach((e => { t.form === e.form && e !== t && (e.checked = !1, this.syncConditionalRevealWithInputState(e)) })) } unCheckExclusiveInputs(t) { document.querySelectorAll(`input[data-behaviour="exclusive"][type="checkbox"][name="${t.name}"]`).forEach((e => { t.form === e.form && (e.checked = !1, this.syncConditionalRevealWithInputState(e)) })) } handleClick(t) { const e = t.target; if (!(e instanceof HTMLInputElement) || "checkbox" !== e.type) return; if (e.getAttribute("aria-controls") && this.syncConditionalRevealWithInputState(e), !e.checked) return; "exclusive" === e.getAttribute("data-behaviour") ? this.unCheckAllInputsExcept(e) : this.unCheckExclusiveInputs(e) } }; L.moduleName = "govuk-checkboxes"; var D = class t extends C { constructor(e, o = {}) { if (super(), this.$module = void 0, this.config = void 0, !(e instanceof HTMLElement)) throw new x({ componentName: "Error summary", element: e, identifier: "Root element (`$module`)" }); this.$module = e, this.config = d(t.defaults, o, y(t, e.dataset)), this.config.disableAutoFocus || f(this.$module), this.$module.addEventListener("click", (t => this.handleClick(t))) } handleClick(t) { const e = t.target; e && this.focusTarget(e) && t.preventDefault() } focusTarget(t) { if (!(t instanceof HTMLAnchorElement)) return !1; const e = p(t.href); if (!e) return !1; const o = document.getElementById(e); if (!o) return !1; const n = this.getAssociatedLegendOrLabel(o); return !!n && (n.scrollIntoView(), o.focus({ preventScroll: !0 }), !0) } getAssociatedLegendOrLabel(t) { var e; const o = t.closest("fieldset"); if (o) { const e = o.getElementsByTagName("legend"); if (e.length) { const o = e[0]; if (t instanceof HTMLInputElement && ("checkbox" === t.type || "radio" === t.type)) return o; const n = o.getBoundingClientRect().top, i = t.getBoundingClientRect(); if (i.height && window.innerHeight) { if (i.top + i.height - n < window.innerHeight / 2) return o } } } return null != (e = document.querySelector(`label[for='${t.getAttribute("id")}']`)) ? e : t.closest("label") } }; D.moduleName = "govuk-error-summary", D.defaults = Object.freeze({ disableAutoFocus: !1 }), D.schema = Object.freeze({ properties: { disableAutoFocus: { type: "boolean" } } }); var j = class t extends C { constructor(e, o = {}) { if (super(), this.$module = void 0, this.config = void 0, this.i18n = void 0, this.$button = void 0, this.$skiplinkButton = null, this.$updateSpan = null, this.$indicatorContainer = null, this.$overlay = null, this.keypressCounter = 0, this.lastKeyWasModified = !1, this.timeoutTime = 5e3, this.keypressTimeoutId = null, this.timeoutMessageId = null, !(e instanceof HTMLElement)) throw new x({ componentName: "Exit this page", element: e, identifier: "Root element (`$module`)" }); const n = e.querySelector(".govuk-exit-this-page__button"); if (!(n instanceof HTMLAnchorElement)) throw new x({ componentName: "Exit this page", element: n, expectedType: "HTMLAnchorElement", identifier: "Button (`.govuk-exit-this-page__button`)" }); this.config = d(t.defaults, o, y(t, e.dataset)), this.i18n = new T(this.config.i18n), this.$module = e, this.$button = n; const i = document.querySelector(".govuk-js-exit-this-page-skiplink"); i instanceof HTMLAnchorElement && (this.$skiplinkButton = i), this.buildIndicator(), this.initUpdateSpan(), this.initButtonClickHandler(), "govukFrontendExitThisPageKeypress" in document.body.dataset || (document.addEventListener("keyup", this.handleKeypress.bind(this), !0), document.body.dataset.govukFrontendExitThisPageKeypress = "true"), window.addEventListener("pageshow", this.resetPage.bind(this)) } initUpdateSpan() { this.$updateSpan = document.createElement("span"), this.$updateSpan.setAttribute("role", "status"), this.$updateSpan.className = "govuk-visually-hidden", this.$module.appendChild(this.$updateSpan) } initButtonClickHandler() { this.$button.addEventListener("click", this.handleClick.bind(this)), this.$skiplinkButton && this.$skiplinkButton.addEventListener("click", this.handleClick.bind(this)) } buildIndicator() { this.$indicatorContainer = document.createElement("div"), this.$indicatorContainer.className = "govuk-exit-this-page__indicator", this.$indicatorContainer.setAttribute("aria-hidden", "true"); for (let t = 0; t < 3; t++) { const t = document.createElement("div"); t.className = "govuk-exit-this-page__indicator-light", this.$indicatorContainer.appendChild(t) } this.$button.appendChild(this.$indicatorContainer) } updateIndicator() { if (!this.$indicatorContainer) return; this.$indicatorContainer.classList.toggle("govuk-exit-this-page__indicator--visible", this.keypressCounter > 0); this.$indicatorContainer.querySelectorAll(".govuk-exit-this-page__indicator-light").forEach(((t, e) => { t.classList.toggle("govuk-exit-this-page__indicator-light--on", e < this.keypressCounter) })) } exitPage() { this.$updateSpan && (this.$updateSpan.textContent = "", document.body.classList.add("govuk-exit-this-page-hide-content"), this.$overlay = document.createElement("div"), this.$overlay.className = "govuk-exit-this-page-overlay", this.$overlay.setAttribute("role", "alert"), document.body.appendChild(this.$overlay), this.$overlay.textContent = this.i18n.t("activated"), window.location.href = this.$button.href) } handleClick(t) { t.preventDefault(), this.exitPage() } handleKeypress(t) { this.$updateSpan && ("Shift" !== t.key || this.lastKeyWasModified ? this.keypressTimeoutId && this.resetKeypressTimer() : (this.keypressCounter += 1, this.updateIndicator(), this.timeoutMessageId && (window.clearTimeout(this.timeoutMessageId), this.timeoutMessageId = null), this.keypressCounter >= 3 ? (this.keypressCounter = 0, this.keypressTimeoutId && (window.clearTimeout(this.keypressTimeoutId), this.keypressTimeoutId = null), this.exitPage()) : 1 === this.keypressCounter ? this.$updateSpan.textContent = this.i18n.t("pressTwoMoreTimes") : this.$updateSpan.textContent = this.i18n.t("pressOneMoreTime"), this.setKeypressTimer()), this.lastKeyWasModified = t.shiftKey) } setKeypressTimer() { this.keypressTimeoutId && window.clearTimeout(this.keypressTimeoutId), this.keypressTimeoutId = window.setTimeout(this.resetKeypressTimer.bind(this), this.timeoutTime) } resetKeypressTimer() { if (!this.$updateSpan) return; this.keypressTimeoutId && (window.clearTimeout(this.keypressTimeoutId), this.keypressTimeoutId = null); const t = this.$updateSpan; this.keypressCounter = 0, t.textContent = this.i18n.t("timedOut"), this.timeoutMessageId = window.setTimeout((() => { t.textContent = "" }), this.timeoutTime), this.updateIndicator() } resetPage() { document.body.classList.remove("govuk-exit-this-page-hide-content"), this.$overlay && (this.$overlay.remove(), this.$overlay = null), this.$updateSpan && (this.$updateSpan.setAttribute("role", "status"), this.$updateSpan.textContent = ""), this.updateIndicator(), this.keypressTimeoutId && window.clearTimeout(this.keypressTimeoutId), this.timeoutMessageId && window.clearTimeout(this.timeoutMessageId) } }; j.moduleName = "govuk-exit-this-page", j.defaults = Object.freeze({ i18n: { activated: "Loading.", timedOut: "Exit this page expired.", pressTwoMoreTimes: "Shift, press 2 more times to exit.", pressOneMoreTime: "Shift, press 1 more time to exit." } }), j.schema = Object.freeze({ properties: { i18n: { type: "object" } } }); var B = class extends C { constructor(t) { if (super(), this.$module = void 0, this.$menuButton = void 0, this.$menu = void 0, this.menuIsOpen = !1, this.mql = null, !t) throw new x({ componentName: "Header", element: t, identifier: "Root element (`$module`)" }); this.$module = t; const e = t.querySelector(".govuk-js-header-toggle"); if (!e) return this; const o = e.getAttribute("aria-controls"); if (!o) throw new x({ componentName: "Header", identifier: 'Navigation button (`<button class="govuk-js-header-toggle">`) attribute (`aria-controls`)' }); const n = document.getElementById(o); if (!n) throw new x({ componentName: "Header", element: n, identifier: `Navigation (\`<ul id="${o}">\`)` }); this.$menu = n, this.$menuButton = e, this.setupResponsiveChecks(), this.$menuButton.addEventListener("click", (() => this.handleMenuButtonClick())) } setupResponsiveChecks() { const t = m("desktop"); if (!t.value) throw new x({ componentName: "Header", identifier: `CSS custom property (\`${t.property}\`) on pseudo-class \`:root\`` }); this.mql = window.matchMedia(`(min-width: ${t.value})`), "addEventListener" in this.mql ? this.mql.addEventListener("change", (() => this.checkMode())) : this.mql.addListener((() => this.checkMode())), this.checkMode() } checkMode() { this.mql && this.$menu && this.$menuButton && (this.mql.matches ? (this.$menu.removeAttribute("hidden"), this.$menuButton.setAttribute("hidden", "")) : (this.$menuButton.removeAttribute("hidden"), this.$menuButton.setAttribute("aria-expanded", this.menuIsOpen.toString()), this.menuIsOpen ? this.$menu.removeAttribute("hidden") : this.$menu.setAttribute("hidden", ""))) } handleMenuButtonClick() { this.menuIsOpen = !this.menuIsOpen, this.checkMode() } }; B.moduleName = "govuk-header"; var M = class t extends C { constructor(e, o = {}) { if (super(), this.$module = void 0, this.config = void 0, !(e instanceof HTMLElement)) throw new x({ componentName: "Notification banner", element: e, identifier: "Root element (`$module`)" }); this.$module = e, this.config = d(t.defaults, o, y(t, e.dataset)), "alert" !== this.$module.getAttribute("role") || this.config.disableAutoFocus || f(this.$module) } }; M.moduleName = "govuk-notification-banner", M.defaults = Object.freeze({ disableAutoFocus: !1 }), M.schema = Object.freeze({ properties: { disableAutoFocus: { type: "boolean" } } }); var H = class t extends C { constructor(e, o = {}) { if (super(), this.$module = void 0, this.config = void 0, this.i18n = void 0, this.$input = void 0, this.$showHideButton = void 0, this.$screenReaderStatusMessage = void 0, !(e instanceof HTMLElement)) throw new x({ componentName: "Password input", element: e, identifier: "Root element (`$module`)" }); const n = e.querySelector(".govuk-js-password-input-input"); if (!(n instanceof HTMLInputElement)) throw new x({ componentName: "Password input", element: n, expectedType: "HTMLInputElement", identifier: "Form field (`.govuk-js-password-input-input`)" }); if ("password" !== n.type) throw new x("Password input: Form field (`.govuk-js-password-input-input`) must be of type `password`."); const i = e.querySelector(".govuk-js-password-input-toggle"); if (!(i instanceof HTMLButtonElement)) throw new x({ componentName: "Password input", element: i, expectedType: "HTMLButtonElement", identifier: "Button (`.govuk-js-password-input-toggle`)" }); if ("button" !== i.type) throw new x("Password input: Button (`.govuk-js-password-input-toggle`) must be of type `button`."); this.$module = e, this.$input = n, this.$showHideButton = i, this.config = d(t.defaults, o, y(t, e.dataset)), this.i18n = new T(this.config.i18n, { locale: A(e, "lang") }), this.$showHideButton.removeAttribute("hidden"); const s = document.createElement("div"); s.className = "govuk-password-input__sr-status govuk-visually-hidden", s.setAttribute("aria-live", "polite"), this.$screenReaderStatusMessage = s, this.$input.insertAdjacentElement("afterend", s), this.$showHideButton.addEventListener("click", this.toggle.bind(this)), this.$input.form && this.$input.form.addEventListener("submit", (() => this.hide())), window.addEventListener("pageshow", (t => { t.persisted && "password" !== this.$input.type && this.hide() })), this.hide() } toggle(t) { t.preventDefault(), "password" !== this.$input.type ? this.hide() : this.show() } show() { this.setType("text") } hide() { this.setType("password") } setType(t) { if (t === this.$input.type) return; this.$input.setAttribute("type", t); const e = "password" === t, o = e ? "show" : "hide", n = e ? "passwordHidden" : "passwordShown"; this.$showHideButton.innerText = this.i18n.t(`${o}Password`), this.$showHideButton.setAttribute("aria-label", this.i18n.t(`${o}PasswordAriaLabel`)), this.$screenReaderStatusMessage.innerText = this.i18n.t(`${n}Announcement`) } }; H.moduleName = "govuk-password-input", H.defaults = Object.freeze({ i18n: { showPassword: "Show", hidePassword: "Hide", showPasswordAriaLabel: "Show password", hidePasswordAriaLabel: "Hide password", passwordShownAnnouncement: "Your password is visible", passwordHiddenAnnouncement: "Your password is hidden" } }), H.schema = Object.freeze({ properties: { i18n: { type: "object" } } }); var F = class extends C { constructor(t) { if (super(), this.$module = void 0, this.$inputs = void 0, !(t instanceof HTMLElement)) throw new x({ componentName: "Radios", element: t, identifier: "Root element (`$module`)" }); const e = t.querySelectorAll('input[type="radio"]'); if (!e.length) throw new x({ componentName: "Radios", identifier: 'Form inputs (`<input type="radio">`)' }); this.$module = t, this.$inputs = e, this.$inputs.forEach((t => { const e = t.getAttribute("data-aria-controls"); if (e) { if (!document.getElementById(e)) throw new x({ componentName: "Radios", identifier: `Conditional reveal (\`id="${e}"\`)` }); t.setAttribute("aria-controls", e), t.removeAttribute("data-aria-controls") } })), window.addEventListener("pageshow", (() => this.syncAllConditionalReveals())), this.syncAllConditionalReveals(), this.$module.addEventListener("click", (t => this.handleClick(t))) } syncAllConditionalReveals() { this.$inputs.forEach((t => this.syncConditionalRevealWithInputState(t))) } syncConditionalRevealWithInputState(t) { const e = t.getAttribute("aria-controls"); if (!e) return; const o = document.getElementById(e); if (null != o && o.classList.contains("govuk-radios__conditional")) { const e = t.checked; t.setAttribute("aria-expanded", e.toString()), o.classList.toggle("govuk-radios__conditional--hidden", !e) } } handleClick(t) { const e = t.target; if (!(e instanceof HTMLInputElement) || "radio" !== e.type) return; const o = document.querySelectorAll('input[type="radio"][aria-controls]'), n = e.form, i = e.name; o.forEach((t => { const e = t.form === n; t.name === i && e && this.syncConditionalRevealWithInputState(t) })) } }; F.moduleName = "govuk-radios"; var I = class extends C { constructor(t) { var e; if (super(), this.$module = void 0, !(t instanceof HTMLAnchorElement)) throw new x({ componentName: "Skip link", element: t, expectedType: "HTMLAnchorElement", identifier: "Root element (`$module`)" }); this.$module = t; const o = this.$module.hash, n = null != (e = this.$module.getAttribute("href")) ? e : ""; let i; try { i = new window.URL(this.$module.href) } catch (t) { throw new x(`Skip link: Target link (\`href="${n}"\`) is invalid`) } if (i.origin !== window.location.origin || i.pathname !== window.location.pathname) return; const s = p(o); if (!s) throw new x(`Skip link: Target link (\`href="${n}"\`) has no hash fragment`); const a = document.getElementById(s); if (!a) throw new x({ componentName: "Skip link", element: a, identifier: `Target content (\`id="${s}"\`)` }); this.$module.addEventListener("click", (() => f(a, { onBeforeFocus() { a.classList.add("govuk-skip-link-focused-element") }, onBlur() { a.classList.remove("govuk-skip-link-focused-element") } }))) } }; I.moduleName = "govuk-skip-link"; var N = class extends C { constructor(t) { if (super(), this.$module = void 0, this.$tabs = void 0, this.$tabList = void 0, this.$tabListItems = void 0, this.jsHiddenClass = "govuk-tabs__panel--hidden", this.changingHash = !1, this.boundTabClick = void 0, this.boundTabKeydown = void 0, this.boundOnHashChange = void 0, this.mql = null, !t) throw new x({ componentName: "Tabs", element: t, identifier: "Root element (`$module`)" }); const e = t.querySelectorAll("a.govuk-tabs__tab"); if (!e.length) throw new x({ componentName: "Tabs", identifier: 'Links (`<a class="govuk-tabs__tab">`)' }); this.$module = t, this.$tabs = e, this.boundTabClick = this.onTabClick.bind(this), this.boundTabKeydown = this.onTabKeydown.bind(this), this.boundOnHashChange = this.onHashChange.bind(this); const o = this.$module.querySelector(".govuk-tabs__list"), n = this.$module.querySelectorAll("li.govuk-tabs__list-item"); if (!o) throw new x({ componentName: "Tabs", identifier: 'List (`<ul class="govuk-tabs__list">`)' }); if (!n.length) throw new x({ componentName: "Tabs", identifier: 'List items (`<li class="govuk-tabs__list-item">`)' }); this.$tabList = o, this.$tabListItems = n, this.setupResponsiveChecks() } setupResponsiveChecks() { const t = m("tablet"); if (!t.value) throw new x({ componentName: "Tabs", identifier: `CSS custom property (\`${t.property}\`) on pseudo-class \`:root\`` }); this.mql = window.matchMedia(`(min-width: ${t.value})`), "addEventListener" in this.mql ? this.mql.addEventListener("change", (() => this.checkMode())) : this.mql.addListener((() => this.checkMode())), this.checkMode() } checkMode() { var t; null != (t = this.mql) && t.matches ? this.setup() : this.teardown() } setup() { var t; this.$tabList.setAttribute("role", "tablist"), this.$tabListItems.forEach((t => { t.setAttribute("role", "presentation") })), this.$tabs.forEach((t => { this.setAttributes(t), t.addEventListener("click", this.boundTabClick, !0), t.addEventListener("keydown", this.boundTabKeydown, !0), this.hideTab(t) })); const e = null != (t = this.getTab(window.location.hash)) ? t : this.$tabs[0]; this.showTab(e), window.addEventListener("hashchange", this.boundOnHashChange, !0) } teardown() { this.$tabList.removeAttribute("role"), this.$tabListItems.forEach((t => { t.removeAttribute("role") })), this.$tabs.forEach((t => { t.removeEventListener("click", this.boundTabClick, !0), t.removeEventListener("keydown", this.boundTabKeydown, !0), this.unsetAttributes(t) })), window.removeEventListener("hashchange", this.boundOnHashChange, !0) } onHashChange() { const t = window.location.hash, e = this.getTab(t); if (!e) return; if (this.changingHash) return void (this.changingHash = !1); const o = this.getCurrentTab(); o && (this.hideTab(o), this.showTab(e), e.focus()) } hideTab(t) { this.unhighlightTab(t), this.hidePanel(t) } showTab(t) { this.highlightTab(t), this.showPanel(t) } getTab(t) { return this.$module.querySelector(`a.govuk-tabs__tab[href="${t}"]`) } setAttributes(t) { const e = p(t.href); if (!e) return; t.setAttribute("id", `tab_${e}`), t.setAttribute("role", "tab"), t.setAttribute("aria-controls", e), t.setAttribute("aria-selected", "false"), t.setAttribute("tabindex", "-1"); const o = this.getPanel(t); o && (o.setAttribute("role", "tabpanel"), o.setAttribute("aria-labelledby", t.id), o.classList.add(this.jsHiddenClass)) } unsetAttributes(t) { t.removeAttribute("id"), t.removeAttribute("role"), t.removeAttribute("aria-controls"), t.removeAttribute("aria-selected"), t.removeAttribute("tabindex"); const e = this.getPanel(t); e && (e.removeAttribute("role"), e.removeAttribute("aria-labelledby"), e.classList.remove(this.jsHiddenClass)) } onTabClick(t) { const e = this.getCurrentTab(), o = t.currentTarget; e && o instanceof HTMLAnchorElement && (t.preventDefault(), this.hideTab(e), this.showTab(o), this.createHistoryEntry(o)) } createHistoryEntry(t) { const e = this.getPanel(t); if (!e) return; const o = e.id; e.id = "", this.changingHash = !0, window.location.hash = o, e.id = o } onTabKeydown(t) { switch (t.key) { case "ArrowLeft": case "ArrowUp": case "Left": case "Up": this.activatePreviousTab(), t.preventDefault(); break; case "ArrowRight": case "ArrowDown": case "Right": case "Down": this.activateNextTab(), t.preventDefault() } } activateNextTab() { const t = this.getCurrentTab(); if (null == t || !t.parentElement) return; const e = t.parentElement.nextElementSibling; if (!e) return; const o = e.querySelector("a.govuk-tabs__tab"); o && (this.hideTab(t), this.showTab(o), o.focus(), this.createHistoryEntry(o)) } activatePreviousTab() { const t = this.getCurrentTab(); if (null == t || !t.parentElement) return; const e = t.parentElement.previousElementSibling; if (!e) return; const o = e.querySelector("a.govuk-tabs__tab"); o && (this.hideTab(t), this.showTab(o), o.focus(), this.createHistoryEntry(o)) } getPanel(t) { const e = p(t.href); return e ? this.$module.querySelector(`#${e}`) : null } showPanel(t) { const e = this.getPanel(t); e && e.classList.remove(this.jsHiddenClass) } hidePanel(t) { const e = this.getPanel(t); e && e.classList.add(this.jsHiddenClass) } unhighlightTab(t) { t.parentElement && (t.setAttribute("aria-selected", "false"), t.parentElement.classList.remove("govuk-tabs__list-item--selected"), t.setAttribute("tabindex", "-1")) } highlightTab(t) { t.parentElement && (t.setAttribute("aria-selected", "true"), t.parentElement.classList.add("govuk-tabs__list-item--selected"), t.setAttribute("tabindex", "0")) } getCurrentTab() { return this.$module.querySelector(".govuk-tabs__list-item--selected a.govuk-tabs__tab") } }; N.moduleName = "govuk-tabs"; var R = r(l()); function O(t) { this.$module = t } O.prototype.init = function () { if (!this.$module) return; this.$module.querySelector('[name="accept"]').addEventListener("click", this.accept.bind(this)); this.$module.querySelector('[name="reject"]').addEventListener("click", this.reject.bind(this)); const t = localStorage.getItem("mojpl-cookies"); if (t) { const e = JSON.parse(t); this.load(e) } }, O.prototype.load = function (t) { if (t.analytics) { let t = function () { dataLayer.push(arguments) }; window.dataLayer = window.dataLayer || [], t("js", new Date), t("config", "G-VTGX4YLSVL") } else window["ga-disable-G-VTGX4YLSVL"] = !0; this.hideMessage() }, O.prototype.hideMessage = function () { this.$module.hasAttribute("data-persistent") || (this.$module.hidden = !0) }, O.prototype.accept = function () { const t = { analytics: !0 }; localStorage.setItem("mojpl-cookies", JSON.stringify(t)), this.load(t) }, O.prototype.reject = function () { localStorage.setItem("mojpl-cookies", JSON.stringify({ analytics: !1 })), window.location.reload() }; var P = O, q = r(u()); function V(t) { this.$module = t } V.prototype.init = function () { let t = this.$module; if (!t) return; let e = document.createElement("button"); e.className = "app-copy-button js-copy-button", e.setAttribute("aria-live", "assertive"), e.textContent = "Copy code", t.insertBefore(e, t.firstChild), this.copyAction() }, V.prototype.copyAction = function () { try { new q.default(".js-copy-button", { target: function (t) { return t.nextElementSibling } }).on("success", (function (t) { t.trigger.textContent = "Code copied", t.clearSelection(), setTimeout((function () { t.trigger.textContent = "Copy code" }), 5e3) })) } catch (t) { t && console.log(t.message) } }; var z = V, K = function (t) { this.container = t, this.keys = { left: 37, right: 39, up: 38, down: 40 }, this.cssHide = "app-tabs__panel--hidden", this.tabs = t.find(".app-tabs__tab"), this.panels = t.find(".app-tabs__panel"), this.container.on("click", "[role=tab]", $.proxy(this, "onTabClick")), this.container.on("keydown", "[role=tab]", $.proxy(this, "onTabKeydown")), this.container.on("click", ".app-tabs__close", $.proxy(this, "onCloseButtonClick")), this.setupHtml() }; K.prototype.hasTab = function (t) { return this.container.find(t).length }, K.prototype.hideTab = function (t) { this.unhighlightTab(t), this.hidePanel(t) }, K.prototype.showTab = function (t) { this.highlightTab(t), this.showPanel(t) }, K.prototype.getTab = function (t) { return this.tabs.filter('a[href="' + t + '"]') }, K.prototype.setupHtml = function () { this.container.find(".app-tabs__list").attr("role", "tablist"), this.container.find(".app-tabs__list-item").attr("role", "presentation"), this.tabs.attr("role", "tab"), this.panels.attr("role", "tabpanel"), this.tabs.each($.proxy((function (t, e) { let o = this.getHref($(e)).slice(1); e.id = "tab_" + o, $(e).attr("aria-controls", o) }), this)), this.panels.each($.proxy((function (t, e) { $(e).attr("aria-labelledby", this.tabs[t].id) }), this)), this.panels.addClass(this.cssHide) }, K.prototype.onTabClick = function (t) { t.preventDefault(); let e = $(t.target), o = this.getCurrentTab(); o[0] && this.hideTab(o), e[0] !== o[0] && this.showTab(e) }, K.prototype.onTabKeydown = function (t) { switch (t.keyCode) { case this.keys.left: case this.keys.up: this.activatePreviousTab(), t.preventDefault(); break; case this.keys.right: case this.keys.down: this.activateNextTab(), t.preventDefault() } }, K.prototype.activateNextTab = function () { let t = this.getCurrentTab(), e = t.parent().next().find("[role=tab]"); e[0] && (this.hideTab(t), this.showTab(e), e.focus(), this.createHistoryEntry(e)) }, K.prototype.activatePreviousTab = function () { let t = this.getCurrentTab(), e = t.parent().prev().find("[role=tab]"); e[0] && (this.hideTab(t), this.showTab(e), e.focus(), this.createHistoryEntry(e)) }, K.prototype.getPanel = function (t) { return $(this.getHref(t)) }, K.prototype.showPanel = function (t) { $(this.getHref(t)).removeClass(this.cssHide) }, K.prototype.hidePanel = function (t) { $(this.getHref(t)).addClass(this.cssHide) }, K.prototype.unhighlightTab = function (t) { t.attr("aria-selected", "false") }, K.prototype.highlightTab = function (t) { t.attr("aria-selected", "true") }, K.prototype.getCurrentTab = function () { return this.container.find("[role=tab][aria-selected=true]") }, K.prototype.getHref = function (t) { let e = t.attr("href"); return e.slice(e.indexOf("#"), e.length) }, K.prototype.onCloseButtonClick = function (t) { let e = this.getCurrentTab(); this.hideTab(e), this.tabs.first().focus() }; var U = K; !function (t) { var e; if (t = void 0 !== t ? t : {}, !g()) return void console.log(new k); const o = [[S, t.accordion], [_, t.button], [E, t.characterCount], [L], [D, t.errorSummary], [j, t.exitThisPage], [B], [M, t.notificationBanner], [H, t.passwordInput], [F], [I], [N]], n = null != (e = t.scope) ? e : document; o.forEach((([t, e]) => { !function (t, e, o = document) { const n = o.querySelectorAll(`[data-module="${t.moduleName}"]`); Array.from(n).map((o => { try { return "defaults" in t && void 0 !== e ? new t(o, e) : new t(o) } catch (t) { return console.log(t), null } })).filter(Boolean) }(t, e, n) })) }(), R.default.initAll(), $((function () { $('[data-module="app-tabs"]').each((function (t, e) { new U($(e)) })), $('[data-module="app-copy"]').each((function (t, e) { new z(e).init() })), $('[data-module="app-cookies"]').each((function (t, e) { new P(e).init() })) })), window.MOJFrontend = R.default })();
