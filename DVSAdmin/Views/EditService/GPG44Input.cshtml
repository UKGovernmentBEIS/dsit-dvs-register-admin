@using DVSAdmin.Models.UI.Enums
@model DVSAdmin.Models.ServiceSummaryViewModel
@{
    ViewData["Title"] = "Is the service certified against GPG44";
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
}
@{
    bool hasError = false;
}

@using (Html.BeginForm("GPG44Input", "EditService", FormMethod.Post))
{
    <div class="govuk-width-container">
        <a href="@((Model.FromSummaryPage) ? Url.Action("ServiceSummary", "EditService") : Url.Action("ServiceDetails", "RegisterManagement", new { serviceKey = Model.ServiceKey }))" class="govuk-back-link">Back</a>
        <main id="main-content" class="govuk-main-wrapper" role="main">
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-two-thirds">

                    @if (Html.ViewData?.ModelState.ContainsKey("HasGPG44") == true)
                    {
                        hasError = true;
                        var errors = Html.ViewData?.ModelState["HasGPG44"]?.Errors;
                        if (errors != null && errors.Count > 0)
                        {
                            hasError = true;
                            ViewData["Title"] = "Error: " + ViewData["Title"];
                            @await Html.PartialAsync("~/Views/PartialViews/_SpecificErrorsView.cshtml",
                                     new Tuple<string, IEnumerable<Microsoft.AspNetCore.Mvc.ModelBinding.ModelError>>("HasGPG44", errors))
                        }

                    }


                    @await Html.PartialAsync("~/Views/PartialViews/_TwoRadioButtonGroupView.cshtml", new TwoRadioButtonGroupViewModel
           {
               PropertyName = "HasGPG44",
               Value = Model.HasGPG44,
               HasError = hasError,
               FieldSet = "Is the service certified against GPG44?",
               ParagraphText = "This must match the information on the certificate of conformity.",
               Heading = HeadingEnum.H1,
               LegendStyleClass = "govuk-fieldset__legend--xl",
               ErrorMessage = hasError ? Html.ViewData?.ModelState["HasGPG44"]?.Errors[0].ErrorMessage ?? string.Empty : string.Empty,
               Label1 = "Yes",
               Label2 = "No"
           })
                    <div class="govuk-button-group">
                        <button type="submit" class="govuk-button govuk-!-margin-top-2">Continue</button>
                        <a href="@((Model.FromSummaryPage) ? Url.Action("ServiceSummary", "EditService") : Url.Action("ServiceDetails", "RegisterManagement", new { serviceKey = Model.ServiceKey }))" class="govuk-button govuk-button--secondary" role="button">Cancel</a>
                    </div>
                </div>
            </div>
        </main>
    </div>
}

