@model DVSAdmin.Models.SupplementarySchemeViewModel
@{
    ViewData["Title"] = "Select the applicable supplementary codes for this service";
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
}
@{
    bool hasError = false;
    int index = 0;
}

<div class="govuk-width-container">
    @Html.ActionLink("Back", "SupplementarySchemesInput", "EditService", new { fromSummaryPage = Model.FromSummaryPage, serviceId = ViewBag.serviceId }, new { @class = "govuk-back-link" })
    <main id="main-content" class="govuk-main-wrapper" role="main">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <h1 class="govuk-heading-xl">
                    Select the applicable supplementary codes for this service
                </h1>

                @if (ViewData.ModelState.ErrorCount > 0)
                {
                    hasError = true;
                    ViewData["Title"] = "Error: " + ViewData["Title"];
                    @await Html.PartialAsync("~/Views/PartialViews/_ErrorSummaryView.cshtml", Model)
                }
                @using (Html.BeginForm("SupplementarySchemes", "EditService", FormMethod.Post))
                {
                    @Html.HiddenFor(m => m.FromSummaryPage)
                    <p class="govuk-body">
                        Select all supplementary codes that the service is certified against on the certificate of conformity.
                    </p>

                    <p class="govuk-body">
                        To make changes, type the new information and select 'Save'. If there is no changes to make, select 'Cancel'.
                    </p>

                    @if (hasError)
                    {
                        <div class="govuk-form-group govuk-form-group--error">
                            <fieldset class="govuk-fieldset" aria-describedby="selectedroleids-hint">
                                <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                                    Select all relevant supplementary codes
                                </legend>
                                <div id="selectedroleids-hint" class="govuk-hint">
                                    Select all that apply
                                </div>
                                <p id="selectedroleids-error" class="govuk-error-message">
                                    <span class="govuk-visually-hidden">Error:</span>
                                    @Html.ValidationMessageFor(m => m.SelectedSupplementarySchemeIds, "", new { @class = "govuk-error-message", id = "selectedsupplementaryschemeids-error" })
                                </p>
                                <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                                    <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                                        @foreach (var item in Model.AvailableSchemes)
                                        {
                                            var idSuffix = index > 0 ? $"_{index}" : string.Empty; // added to make the first checkbox id as selectedsupplementaryschemeids so that error summary ahref refers first item
                                            <div class="govuk-checkboxes__item">
                                                <input class="govuk-checkboxes__input" type="checkbox" name="SelectedSupplementarySchemeIds" value="@item.Id"
                                                       id="selectedsupplementaryschemeids@(idSuffix)"
                                                @(Model.SelectedSupplementarySchemeIds.Contains(item.Id) ? "checked" : "") />
                                                <label class="govuk-label govuk-checkboxes__label" for="selectedsupplementaryschemeids@(idSuffix)">@item.SchemeName</label>
                                            </div>
                                            index++;
                                        }
                                    </div>
                                </div>

                            </fieldset>
                        </div>
                    }
                    else
                    {
                        <div class="govuk-form-group">
                            <fieldset class="govuk-fieldset" aria-describedby="selectedroleids-hint">
                                <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                                    Select all relevant supplementary codes
                                </legend>
                                <div id="selectedroleids-hint" class="govuk-hint">
                                    Select all that apply
                                </div>

                                <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                                    <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                                        @foreach (var item in Model.AvailableSchemes)
                                        {
                                            var idSuffix = index > 0 ? $"_{index}" : string.Empty;
                                            <div class="govuk-checkboxes__item">
                                                <input class="govuk-checkboxes__input" type="checkbox" name="SelectedSupplementarySchemeIds"
                                                       value="@item.Id" id="selectedsupplementaryschemeids@(idSuffix)"
                                                @(Model.SelectedSupplementarySchemeIds.Contains(item.Id) ? "checked" : "") />
                                                <label class="govuk-label govuk-checkboxes__label" for="selectedsupplementaryschemeids@(idSuffix)">@item.SchemeName</label>
                                            </div>
                                            index++;
                                        }
                                    </div>
                                </div>

                            </fieldset>
                        </div>
                    }

                    <div class="govuk-warning-text govuk-!-margin-top-8">
                        <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
                        <strong class="govuk-warning-text__text">
                            <span class="govuk-visually-hidden">Warning</span>
                            If you select 'Save' your changes will need to be approved by another OfDIA user. Do not select 'Save' unless you have made changes.
                        </strong>
                    </div>

                    <div class="govuk-button-group">
                        <button type="submit" class="govuk-button govuk-!-margin-top-6" data-module="govuk-button">
                            Save
                        </button>
                        <a href="@((Model.FromSummaryPage) ? Url.Action("ServiceSummary", "EditService") : Url.Action("ServiceDetails", "RegisterManagement", new { serviceKey = ViewBag.serviceKey }))" class="govuk-button govuk-button--secondary" role="button">Cancel</a>
                    </div>
                }
            </div>
        </div>
    </main>

</div>
