@model DVSAdmin.Models.ServiceSummaryViewModel
@{
    ViewData["Title"] = "The digital identity and attribute service provider’s name of service";
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
}
@{
    bool hasError = false;
}

<div class="govuk-width-container">
    <a href="@((Model.FromSummaryPage) ? Url.Action("ServiceSummary", "EditService") : Url.Action("ServiceDetails", "RegisterManagement", new { serviceKey = Model.ServiceKey }))" class="govuk-back-link">Back</a>
    @using (Html.BeginForm("ServiceName", "EditService", FormMethod.Post))
    {
        <main id="main-content" class="govuk-main-wrapper" role="main">
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-two-thirds">

                    @if (Html.ViewData?.ModelState.ContainsKey("ServiceName") == true)
                    {
                        var errors = Html.ViewData?.ModelState["ServiceName"]?.Errors;
                        if (errors != null && errors.Count > 0)
                        {
                            hasError = true;
                            ViewData["Title"] = "Error: " + ViewData["Title"];
                            @await Html.PartialAsync("~/Views/PartialViews/_SpecificErrorsView.cshtml",
                                     new Tuple<string, IEnumerable<Microsoft.AspNetCore.Mvc.ModelBinding.ModelError>>("ServiceName", errors))
                        }
                    }

                    <h1 class="govuk-heading-xl form-title">
                        The digital identity and attribute service provider’s name of service
                    </h1>

                    <p class="govuk-body">
                        This must match the service name on the certificate of conformity.
                    </p>

                    <p class="govuk-body">
                        To make changes, type the new information ans select 'Save'. If there are no changes to make, select 'cancel.'
                    </p>


                    @{
                        var serviceNameViewmodel = new TextBoxViewModel
                {
                    PropertyName = "ServiceName",
                    Label = "Name of service",
                    Value = Model?.ServiceName ?? string.Empty,
                    Class = "govuk-input",
                    Hint = "For example, ‘Identity Verification App‘",
                    HasError = hasError,
                    ErrorMessage = hasError ? Html.ViewData?.ModelState["ServiceName"]?.Errors[0].ErrorMessage ?? string.Empty : string.Empty,
                };
                    }

                    @await Html.PartialAsync("~/Views/PartialViews/_TextBoxView.cshtml", serviceNameViewmodel)

                    <div class="govuk-warning-text govuk-!-margin-top-8">
                        <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
                        <strong class="govuk-warning-text__text">
                            <span class="govuk-visually-hidden">Warning</span>
                            If you select 'Save' your changes will need to be approved by another OfDIA user. Do not select 'Save' unless you have made changes.
                        </strong>
                    </div>
   

                    <div class="govuk-button-group">
                        <button type="submit" class="govuk-button govuk-!-margin-top-2">Save</button>
                        <a href="@((Model.FromSummaryPage) ? Url.Action("ServiceSummary", "EditService") : Url.Action("ServiceDetails", "RegisterManagement", new { serviceKey = Model.ServiceKey }))" class="govuk-button govuk-button--secondary" role="button">Cancel</a>
                    </div>
                </div>
            </div>
        </main>
        }
    </div>
