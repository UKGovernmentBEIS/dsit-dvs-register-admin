@model CertificateDetailsViewModel;
@using DVSAdmin.CommonUtility.Models.Enums
@using DVSAdmin.Extensions
@{
    ViewData["Title"] = "Submission details";
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
    ViewData["HidePublishStatus"] = true;// setting variable to hide status field in partial view
    var providerEmailsViewModel = new ProviderEmailsViewModel
            {
                Heading = "Provider contact information",
                ProviderContact = Model?.CertificateValidation?.Service?.Provider
            };

    string refererUrl = Convert.ToString(ViewBag.RefererUrl);
}

<div class="govuk-width-container">
    <div class="govuk-breadcrumbs">
        <ol class="govuk-breadcrumbs__list">
            <li class="govuk-breadcrumbs__list-item">
                @Html.ActionLink("Home", "LandingPage", "DigitalIdentity", null, new { @class = "govuk-breadcrumbs__link" })
            </li>
            <li class="govuk-breadcrumbs__list-item">
                <a href="@refererUrl" class="govuk-breadcrumbs__link">
                    Certificate review
                </a>
            </li>
        </ol>
    </div>
    <main id="main-content" class="govuk-main-wrapper" role="main">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">

                <h1 class="govuk-heading-xl">Submission details</h1>

                @if (Model?.CertificateValidation?.Service?.CertificateReview.CertificateReviewStatus == CertificateReviewEnum.AmendmentsRequired)
                {
                    <details class="govuk-details">
                        <summary class="govuk-details__summary">
                            <span class="govuk-details__summary-text">
                                This submission has been sent back to the Conformity Assessment Body
                            </span>
                        </summary>
                        <div class="govuk-details__text">
                            A resubmission request has been sent to the Conformity Assessment Body.
                            The CAB will need to amend and resubmit the submission according to the review feedback from OfDIA.
                            Select ‘Go back to certificate review’ to review other submissions.
                        </div>
                    </details>
                }
            </div>
            <div class="govuk-grid-column-full">
                @await Html.PartialAsync("~/Views/CertificateReview/PartialViews/_ServiceDetailsView.cshtml", Model?.CertificateValidation?.Service)


                <div class="govuk-!-padding-bottom-6">
                    <h2 class="govuk-heading-l">Provided certificate of conformity</h2>
                    <p class="govuk-body-l">
                        @Model?.CertificateValidation?.Service?.FileName.
                    </p>
                    <p class="govuk-body">
                        <span class="govuk-hint">
                            PDF, @Model?.CertificateValidation?.Service?.FileSizeInKb KB, 1 page
                        </span>
                    </p>
                    <p class="govuk-body">
                        <span class="govuk-hint">
                            This file may not be suitable for users of assistive technology.
                        </span>
                    </p>
                    <a href="/certificate-review/download-certificate?key=@Model.CertificateValidation.Service.FileLink&filename=@Model.CertificateValidation.Service.FileName" role="button" draggable="false" class="govuk-button govuk-button--secondary" data-module="govuk-button" target="_blank">
                        Download certificate of conformity 
                    </a>
                </div>

                <div class="govuk-!-padding-bottom-6">
                    <h2 class="govuk-heading-l">Submitted information</h2>
                    @await Html.PartialAsync("~/Views/CertificateReview/PartialViews/_SubmittedInformationView.cshtml", Model?.CertificateValidation?.Service)
                    @await Html.PartialAsync("~/Views/CertificateReview/PartialViews/_ContactView.cshtml", Model?.CertificateValidation?.Service)
                </div>


                @if (Model?.CertificateValidation?.Service?.CertificateReview != null)
                {
                    if (Model?.CertificateValidation?.Service?.CertificateReview.CertificateReviewStatus == CertificateReviewEnum.Approved)
                    {
                        @await Html.PartialAsync("~/Views/PartialViews/_ProviderEmailsView.cshtml", providerEmailsViewModel)

                        <h3 class="govuk-heading-m">  Opening the loop</h3>
                        <hr class="govuk-section-break govuk-section-break--s govuk-section-break--visible">
                        <dl class="govuk-summary-list">
                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    Link
                                </dt>
                                @if (ViewBag.OpeningTheLoopLink != null)
                                {
                                    <dd class="govuk-summary-list__value">
                                        @Convert.ToString(ViewBag.OpeningTheLoopLink)
                                    </dd>
                                }
                                else
                                {
                                    <dd class="govuk-summary-list__value">
                                        Already consented
                                    </dd>
                                }
                            </div>

                        </dl>


                        <h2 class="govuk-heading-l">Review summary</h2>

                        <dl class="govuk-summary-list">
                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    Certificate validation
                                </dt>
                                <dd class="govuk-summary-list__value">
                                    <strong class="govuk-tag govuk-tag--green">
                                        Approved
                                    </strong>
                                </dd>
                            </div>

                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    Information match
                                </dt>
                                <dd class="govuk-summary-list__value">
                                    <strong class="govuk-tag govuk-tag--green">
                                        Yes, it matches the information on the certificate
                                    </strong>
                                </dd>
                            </div>
                        </dl>


                        <h3 class="govuk-heading-m">Comments</h3>
                        <p class="govuk-body">
                            @HtmlExtensions.ToStringWithLineBreaks(Model?.CertificateValidation?.CommentsForIncorrect ?? string.Empty)
                        </p>
                        <p class="govuk-body">
                            @HtmlExtensions.ToStringWithLineBreaks(Model?.CertificateReview?.Comments ?? string.Empty)
                        </p>


                    }
                    else if (Model?.CertificateValidation?.Service?.CertificateReview.CertificateReviewStatus == CertificateReviewEnum.Rejected)
                    {
                        @await Html.PartialAsync("~/Views/PartialViews/_ProviderEmailsView.cshtml", providerEmailsViewModel)

                        <h2 class="govuk-heading-l">What was rejected</h2>



                        @await Html.PartialAsync("~/Views/CertificateReview/PartialViews/_CertificateValidationFieldsView.cshtml",
                                 new ReviewFiledsViewModel
                                {
                                CertificateValidation = Model.CertficateRejection.CertificateValidation,
                                InformationMatched = Model.CertificateReview.InformationMatched,
                                IsRejectFlow = true,
                                TextForIncorrectField = "Incorrect"
                                })

                        <h3 class="govuk-heading-m">Comments</h3>
                        <p class="govuk-body">
                            @HtmlExtensions.ToStringWithLineBreaks(Model.CertificateValidation.CommentsForIncorrect)
                        </p>
                        <p class="govuk-body">
                            @HtmlExtensions.ToStringWithLineBreaks(Model.CertificateReview.Comments)
                        </p>
                        <p class="govuk-body">
                            @HtmlExtensions.ToStringWithLineBreaks(Model.CertficateRejection.Comments)
                        </p>

                        <hr class="govuk-section-break govuk-section-break--m">

                        <div class="govuk-warning-text">
                            <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
                            <strong class="govuk-warning-text__text">
                                <span class="govuk-visually-hidden">Warning</span>
                                If you select 'Restore this submission' the submission will be removed from the archive and moved to the certificate submissions tab
                            </strong>
                        </div>

                        <div class="govuk-button-group">
                            <a href="/certificate-review/restore-submission?reviewId=@Model.CertificateValidation.Service.CertificateReview.Id&serviceId=@Model.CertificateValidation.Service.Id" role="button" draggable="false" class="govuk-button" data-module="govuk-button">
                                Restore this submission
                            </a>
                            <a href="/certificate-review/certificate-review-list#archive" class="govuk-button govuk-button--secondary" role="button" draggable="false" data-module="govuk-button">
                                Go back to archive
                            </a>
                        </div>

                    }

                    else if (Model?.CertificateValidation?.Service?.CertificateReview.CertificateReviewStatus == CertificateReviewEnum.AmendmentsRequired)
                    {
                        <h2 class="govuk-heading-l">Information that was sent to the CAB</h2>

                        @await Html.PartialAsync("~/Views/CertificateReview/PartialViews/_CertificateValidationFieldsView.cshtml",
                                 new ReviewFiledsViewModel
                                {
                                    CertificateValidation = Model.CertficateRejection.CertificateValidation,
                                    InformationMatched = Model.CertificateReview.InformationMatched,
                                    IsRejectFlow = false,
                                    TextForIncorrectField = "Amendments needed",
                                    ReviewComments = Model.SendBackViewModel.Reason
                                })

                        <div class="govuk-!-padding-top-5 govuk-!-padding-bottom-9">
                            <h2 class="govuk-heading-l">Decision comments recorded by OfDIA</h2>
                            <p class="govuk-body">
                                @HtmlExtensions.ToStringWithLineBreaks(Model.CertificateReview.Comments)
                            </p>

                            <div class="govuk-button-group govuk-!-padding-top-5 govuk-!-padding-bottom-9">
                                <a href="/certificate-review/certificate-review-list" class="govuk-button" role="button" draggable="false" data-module="govuk-button">
                                    Go back to certificate review
                                </a>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </main>

</div>

