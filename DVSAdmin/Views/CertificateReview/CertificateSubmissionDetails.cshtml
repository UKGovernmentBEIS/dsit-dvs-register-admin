@model CertificateDetailsViewModel
@using DVSAdmin.CommonUtility.Models.Enums
@using DVSAdmin.Extensions
@{
    ViewData["Title"] = "Submission details";
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
    ViewData["HidePublishStatus"] = true;// setting variable to hide status field in partial view
}

<div class="govuk-width-container">
    @Html.ActionLink("Back", "CertificateReviews", "CertificateReview", null, new { @class = "govuk-back-link" })
    <main class="govuk-main-wrapper">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">

                <h1 class="govuk-heading-xl">Submission details</h1>

                @await Html.PartialAsync("~/Views/CertificateReview/PartialViews/_ServiceDetailsView.cshtml", Model?.CertificateValidation?.Service)
                <h2 class="govuk-heading-l">Provided certificate of conformity</h2>
                <p class="govuk-body-l">
                    @Model?.CertificateValidation?.Service?.FileName.
                </p>
                <p class="govuk-body">
                    <span class="govuk-hint">
                        PDF, @Model?.CertificateValidation?.Service?.FileSizeInKb KB, 1 page
                    </span>
                </p>
                <p class="govuk-body">
                    <span class="govuk-hint">
                        This file may not be suitable for users of assistive technology.
                    </span>
                </p>
                <a href="/certificate-review/download-certificate?key=@Model.CertificateValidation.Service.FileLink&filename=@Model.CertificateValidation.Service.FileName" role="button" draggable="false" class="govuk-button govuk-button--secondary" data-module="govuk-button" target="_blank">
                    Download certificate of conformity
                </a>


                <h2 class="govuk-heading-l">Submitted information</h2>

          

                @await Html.PartialAsync("~/Views/PartialViews/_ServiceDetailsView.cshtml", Model?.CertificateValidation?.Service)

                @await Html.PartialAsync("~/Views/CertificateReview/PartialViews/_ContactView.cshtml", Model?.CertificateValidation?.Service)



                @if (Model?.CertificateValidation?.Service?.CertificateReview!=null)
                {
                    if (Model?.CertificateValidation?.Service?.CertificateReview.CertificateReviewStatus == CertificateReviewEnum.Approved)
                    {
                        <h2 class="govuk-heading-l">Review summary</h2>                        

                        <dl class="govuk-summary-list">
                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    Certificate validation
                                </dt>
                                <dd class="govuk-summary-list__value">
                                    <strong class="govuk-tag govuk-tag--green">
                                        Approved
                                    </strong>
                                </dd>
                            </div>

                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    Information match
                                </dt>
                                <dd class="govuk-summary-list__value">
                                    <strong class="govuk-tag govuk-tag--green">
                                        Yes, it matches the information on the certificate
                                    </strong>
                                </dd>
                            </div>
                        </dl>

                        <h3 class="govuk-heading-m">Comments</h3>
                        <p class="govuk-body">
                            @HtmlExtensions.ToStringWithLineBreaks(Model?.CertificateValidation?.CommentsForIncorrect??string.Empty)
                        </p>
                        <p class="govuk-body">
                            @HtmlExtensions.ToStringWithLineBreaks(Model?.CertificateReview?.Comments??string.Empty)
                        </p>
                        
                    }
                    else if (Model?.CertificateValidation?.Service?.CertificateReview.CertificateReviewStatus == CertificateReviewEnum.Rejected)
                    {
                        <h2 class="govuk-heading-l">What was rejected</h2>
                        @await Html.PartialAsync("~/Views/CertificateReview/PartialViews/_CertificateValidationFieldsView.cshtml",Model.CertficateRejection )

                      

                        <h3 class="govuk-heading-m">Comments</h3>
                        <p class="govuk-body">
                            @HtmlExtensions.ToStringWithLineBreaks(Model.CertificateValidation.CommentsForIncorrect)
                        </p>
                        <p class="govuk-body">
                            @HtmlExtensions.ToStringWithLineBreaks(Model.CertificateReview.Comments)
                        </p>
                        <p class="govuk-body">
                            @HtmlExtensions.ToStringWithLineBreaks(Model.CertficateRejection.Comments)
                        </p>

                    }
                }
               

            </div>
        </div>
    </main>

</div>

