@model DVSAdmin.Models.CertificateReview.ReviewViewModel
@using DVSAdmin.Extensions;
@using DVSAdmin.CommonUtility.Models.Enums;
@using Newtonsoft.Json
@using DVSAdmin.Models.UI;

@{
    ViewData["Title"] = "Remote Verify";
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
    ViewData["HidePublishStatus"] = true;
}

<div class="govuk-width-container">
    @Html.ActionLink("Back", "CertificateReviews", "CertificateReview", null, new { @class = "govuk-back-link" })
    <main id="main-content" class="govuk-main-wrapper" role="main">

        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
            @using (Html.BeginForm("SaveCertificateReview", "CertificateReview", FormMethod.Post))
            {              
                @Html.HiddenFor(m=>m.ServiceId)
                <div class="govuk-grid-column-full">

                    @if (ViewData.ModelState.ErrorCount > 0)
                    {
                        ViewData["Title"] = "Error: " + ViewData["Title"];
                        @await Html.PartialAsync("~/Views/PartialViews/_ErrorSummaryView.cshtml", Model)
                    }
                    <span class="govuk-caption-xl">Certificate validation and information check</span>   

                    <h1 class="govuk-heading-xl">

                        @Model?.Service?.ServiceName
                        <span class="govuk-caption-l">@Model?.Service?.Provider.RegisteredName</span>
                     
                    </h1>
                    

                </div>
                <div class="govuk-grid-column-full">

                        <dl class="govuk-summary-list">                            

                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    Conformity Assessment Body (CAB)
                                </dt>
                                <dd class="govuk-summary-list__value">
                                    @Model.Service.CabUser.Cab.CabName
                                </dd>
                            </div>
                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    Days left to complete review
                                </dt>
                                <dd class="govuk-summary-list__value">
                                    @Model.Service.DaysLeftToComplete
                                </dd>
                            </div>
                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    New application or reapplication
                                </dt>
                                <dd class="govuk-summary-list__value">
                                    @Model.Service.NewOrResubmission
                                    @if (Model.Service.IsResubmission == true)
                                    {
                                        <a href="/certificate-review/certificate-submission-details?serviceId=@Model?.Service.PreviousVersionServiceId" class="govuk-link" target='_blank'>
                                            <br /> Access the previous submission (Opens in new tab)
                                        </a>
                                    }
                                </dd>
                            </div>
                        </dl>
                    
                </div>


                 <div class="govuk-grid-column-full">

                <h2 class="govuk-heading-l">How to complete the checks</h2>
                <ol class="govuk-list govuk-list--number">
                    <li>Select the 'Download certificate of conformity' button.</li>
                    <li>Ensure the information on the certificate meets the requirements in Process for conducting certificate reviews and due diligence checks.</li>
                    <li>
                        Ensure all information matches the details printed on the certificate. These will appear on the public register, if the
                        provider makes an application to publish the service details.
                    </li>
                    <li>To proceed with the next step, select the 'Continue' button.</li>
                    <li>
                        If the certificate is not valid, or the information submitted does not match that on the certificate, you can request amends
                        by selecting the 'Return to CAB' button.
                    </li>
                </ol>

                <hr class="govuk-section-break govuk-section-break--xl govuk-section-break--visible">

                <h1 class="govuk-heading-xl">Certificate validity</h1>
                <h2 class="govuk-heading-l">Provided certificate of conformity</h2>

                <span class="govuk-caption-xl">@Model.Service.FileName</span>

                <div id="download-certificate-hint" class="govuk-hint">
                    PDF, @Model.Service.FileSizeInKb KB, 1 page <br />
                    This file may not be suitable for users of assistive technology.
                </div>
                <a href="/certificate-review/download-certificate?key=@Model.Service.FileLink&filename=@Model.Service.FileName" role="button" draggable="false" class="govuk-button govuk-button--secondary" data-module="govuk-button" target="_blank">
                    Download certificate of conformity
                </a>
                   
                @await Html.PartialAsync("~/Views/PartialViews/_TwoRadioButtonGroupView.cshtml", new TwoRadioButtonGroupViewModel
                   {
                       PropertyName = "CertificateValid",
                       Value = Model.CertificateValid,
                       Heading = DVSAdmin.Models.UI.Enums.HeadingEnum.H3,
                       FieldSet = "Does the information provided on the certificate of conformity meet the certification scheme requirements?",
                   LegendStyleClass = "govuk-fieldset__legend--m",
                       HasError = Html.ViewData.ModelState.ContainsKey("CertificateValid") && Html.ViewData.ModelState["CertificateValid"].Errors.Count > 0,
                       ErrorMessage = Html.ViewData.ModelState.ContainsKey("CertificateValid") && Html.ViewData.ModelState["CertificateValid"].Errors.Count > 0 ?
                       Html.ViewData.ModelState["CertificateValid"].Errors[0].ErrorMessage : string.Empty,
                       Label1 = "Yes, the certificate is valid",
                       Label2 = "No, the certificate is not valid"
                   })

                <hr class="govuk-section-break govuk-section-break--xl govuk-section-break--visible">
                </div>

                <div class="govuk-grid-column-full">
                    <h1 class="govuk-heading-xl">Information match</h1>
                    <h2 class="govuk-heading-l">Certification information</h2>

                    @await Html.PartialAsync("~/Views/PartialViews/_ServiceDetailsView.cshtml", Model.Service)

                     
                        @if (@Model.Service.ServiceSupSchemeMapping != null && @Model.Service.ServiceSupSchemeMapping.Count > 0)
                        {
                            if ((@Model.Service.ServiceSupSchemeMapping.Any(mapping => mapping.SchemeGPG44Mapping != null && mapping.SchemeGPG44Mapping.Count > 0))
                            || (@Model.Service.ServiceSupSchemeMapping.Any(mapping => mapping.SchemeGPG45Mapping != null && mapping.SchemeGPG45Mapping.Count > 0)))
                            {
                               
                                    @await Html.PartialAsync("~/Views/PartialViews/_SchemeMappingView.cshtml", Model.Service)
                             
                            }
                        }

                        @if (Model.Service.ServiceType == ServiceTypeEnum.WhiteLabelled)
                        {
                           
                                @await Html.PartialAsync("~/Views/PartialViews/_UnderpinningServiceDetailsView.cshtml", Model.Service)
                            
                        }
                        </div>
                        
            
               

                <div class="govuk-grid-column-full">

                    @await Html.PartialAsync("~/Views/PartialViews/_TwoRadioButtonGroupView.cshtml", new TwoRadioButtonGroupViewModel
                   {
                    PropertyName = "InformationMatched",
                    Value = Model.InformationMatched,
                    Heading = DVSAdmin.Models.UI.Enums.HeadingEnum.H3,
                    FieldSet = "Does this information match the certificate of conformity?",
                    LegendStyleClass = "govuk-fieldset__legend--m",
                    HasError = Html.ViewData.ModelState.ContainsKey("InformationMatched") && Html.ViewData.ModelState["InformationMatched"].Errors.Count > 0,
                    ErrorMessage = Html.ViewData.ModelState.ContainsKey("InformationMatched") && Html.ViewData.ModelState["InformationMatched"].Errors.Count > 0 ?
                    Html.ViewData.ModelState["InformationMatched"].Errors[0].ErrorMessage : string.Empty,
                    Label1 = "Yes, the information matches",
                    Label2 = "No, the information does not match"
                   })
                  

                    @if (Model.Service.CertificateReview == null || (Model.Service.CertificateReview != null &&
                                    Model.Service.CertificateReview.CertificateReviewStatus == CertificateReviewEnum.DeclinedByProvider))
                    {
                        <div class="govuk-button-group" id="submitvalidation">
                            <button type="submit" class="govuk-button" data-module="govuk-button" name="saveReview" value="continue">
                                Continue
                            </button>
                            <button type="submit" class="govuk-button govuk-button--secondary" data-module="govuk-button" name="saveReview" value="send-back">
                                Return to CAB
                            </button>
                        </div>

                    }

                    <div class="govuk-warning-text">
                        <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
                        <strong class="govuk-warning-text__text">
                            <span class="govuk-visually-hidden">Warning</span>
                            To continue to the next step, you must have answered all questions.
                        </strong>
                    </div>
                </div>
            }

         </div>
        </div>
    </main>
</div>