@model CertficateRejectionViewModel
@using DVSAdmin.Extensions;
@using DVSAdmin.CommonUtility.Models.Enums;
@using Newtonsoft.Json
@{
    ViewData["Title"] = "RejectSubmission";
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
}

<div class="govuk-width-container">
    @Html.ActionLink("Back", "CertificateReview", "CertificateReview", null, new { @class = "govuk-back-link" })
    <main class="govuk-main-wrapper">
        <div class="govuk-grid-row">

            <h1 class="govuk-heading-xl">Reject submission</h1>
            <p class="govuk-body">
                You are about to reject the following submission:
            </p>
            @if (ViewData.ModelState.ErrorCount >0)
            {
                ViewData["Title"] = "Error: " + ViewData["Title"];
                @await Html.PartialAsync("~/Views/PartialViews/_ErrorSummaryView.cshtml", Model)
            }

            @using (Html.BeginForm("SaveRejectSubmission", "CertificateReview", FormMethod.Post))
                {
                string checkboxid = string.Empty;
                @Html.AntiForgeryToken()

                <div class="govuk-grid-column-full">
                    <table class="govuk-table">
                        <thead class="govuk-table__head">
                            <tr class="govuk-table__row">
                                <th scope="col" class="govuk-table__header"> Service name </th>
                                <th scope="col" class="govuk-table__header">Service Provider</th>
                                <th scope="col" class="govuk-table__header">Conformity Assessment Body </th>
                                <th scope="col" class="govuk-table__header">Role type</th>
                                <th scope="col" class="govuk-table__header">Time submitted</th>
                                <th scope="col" class="govuk-table__header">Review status</th>
                                <th scope="col" class="govuk-table__header">Days left to complete checks</th>
                            </tr>
                        </thead>
                        <tbody class="govuk-table__body">
                            <tr class="govuk-table__row">

                                <th scope="row" class="govuk-table__header">@Model.CertificateValidation.CertificateInformation.ServiceName</th>
                                <td class="govuk-table__cell">@Model.CertificateValidation.CertificateInformation.TradingName</td>
                                <td class="govuk-table__cell">@Model.CertificateValidation.CertificateInformation.SubmittedCAB</td>
                                <td class="govuk-table__cell">
                                    @foreach (var role in @Model.CertificateValidation.CertificateInformation.CertificateInfoRoleMapping)
                                    {
                                        RoleEnum enumValue = (RoleEnum)role.RoleId;
                                        <div> @Enum.GetName(enumValue) </div>
                                    }
                                </td>
                                <td class="govuk-table__cell"> @DateTimeExtensions.FormatDateTime(Model.CertificateValidation.CertificateInformation.CreatedDate)</td>
                                @if (@Model.CertificateValidation.CertificateInformation.CertificateReview == null)
                                {
                                    <td class="govuk-table__cell">@HtmlExtensions.ToStyledStrongTag(Model.CertificateValidation.CertificateInformation.CertificateInfoStatus)</td>
                                }
                                else
                                {
                                    <td class="govuk-table__cell">@HtmlExtensions.ToStyledStrongTag(Model.CertificateValidation.CertificateInformation.CertificateReview.CertificateInfoStatus)</td>
                                }
                                <td class="govuk-table__cell">@Model.CertificateValidation.CertificateInformation.DaysLeftToComplete  days</td>

                            </tr>
                        </tbody>
                    </table>

                    <h1 class="govuk-heading-m">What was rejected</h1>

                    <hr class="govuk-section-break govuk-section-break--visible">

                    @await Html.PartialAsync("~/Views/CertificateReview/PartialViews/_CertificateValidationFieldsView.cshtml", Model)

                    
                </div>
                <div class="govuk-grid-column-two-thirds">
                    <h1 class="govuk-heading-s">Coments</h1>
                    <p class="govuk-body">
                        @HtmlExtensions.ToStringWithLineBreaks(Model?.CertificateValidation?.CommentsForIncorrect)
                    </p>
                    <p class="govuk-body">
                        @HtmlExtensions.ToStringWithLineBreaks(Model?.CertificateReview?.Comments)
                    </p>
                    <h1 class="govuk-heading-l">
                        Rejection information to be sent to the
                        Conformity Assessment Body
                    </h1>
                    <p class="govuk-body">
                        You should now give details of the reason(s) for rejection to be sent by email
                        to the CAB. Please select reason(s) from the below list which align with the
                        rejection criteria shown above. You should also provide specific details and
                        outline any action required in the text box below
                    </p>


                </div>


                    @if (Html.ViewData.ModelState.ContainsKey("SelectedRejectionReasonIds") && Html.ViewData.ModelState["SelectedRejectionReasonIds"].Errors.Count > 0)
                    {

                    <div class="govuk-grid-column-full">
                        <div class="govuk-form-group govuk-form-group--error">
                            <fieldset class="govuk-fieldset">
                                <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                                    <h1 class="govuk-fieldset__heading">
                                        Select reason(s) for rejection to be sent to the CAB
                                    </h1>
                                </legend>
                                <p id="selectedrejectionreasonids-error" class="govuk-error-message">
                                    <span class="govuk-visually-hidden">Error:</span> @Html.ValidationMessageFor(m => m.SelectedRejectionReasonIds, "", new { @class = "govuk-error-message" })
                                </p>
                                <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                                    @foreach (var reason in Model?.RejectionReasons)
                                    {
                                        <div class="govuk-checkboxes__item">
                                            <input class="govuk-checkboxes__input" type="checkbox" name="SelectedRejectionReasonIds" value="@reason.Id" aria-describedby="selectedrejectionreasonids-error" id="@("selectedrejectionreasonids"+checkboxid)"
                                            @(Model.SelectedRejectionReasonIds.Contains(reason.Id) ? "checked" : "") />
                                            <label class="govuk-label govuk-checkboxes__label" for="@("selectedrejectionreasonids"+checkboxid)">@reason.Reason</label>
                                        </div>
                                        checkboxid = (reason.Id + 1).ToString();
                                    }
                                </div>

                            </fieldset>
                        </div>
                        </div>
                    }
                    else
                    {
                    <div class="govuk-grid-column-three-quarters">
                        <div class="govuk-form-group">
                            <fieldset class="govuk-fieldset">
                                <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                                    <h1 class="govuk-fieldset__heading">
                                        Select the role(s)
                                    </h1>
                                </legend>


                                <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                                    
                                    @foreach (var reason in Model.RejectionReasons)
                                    {                                        
                                        <div class="govuk-checkboxes__item">
                                            <input class="govuk-checkboxes__input" type="checkbox" name="SelectedRejectionReasonIds" value="@reason.Id" id="@("selectedrejectionreasonids"+checkboxid)"
                                            @(Model.SelectedRejectionReasonIds.Contains(reason.Id) ? "checked" : "") />
                                            <label class="govuk-label govuk-checkboxes__label" for="@("selectedrejectionreasonids"+checkboxid)">@reason.Reason</label>
                                        </div>
                                        checkboxid = (reason.Id + 1).ToString();

                                    }
                                </div>

                            </fieldset>
                        </div>
                        </div>
                    }

                <div class="govuk-grid-column-two-thirds">
                    <p class="govuk-body">
                        Please use the textbox below to give further details on the reason for
                        rejection and any required amendments for re submission. If you had selected
                        Other , please specify details below.
                    </p>

                    <h1 class="govuk-heading-s"> Give further details on reason(s) selected and any required amendments</h1>
                    <div id="comments-hint" class="govuk-hint">
                        For example: ‘UKDIATF logo is missing from the certificate. Please add
                        UKDIATF logo to the certificate.
                    </div>

                    @if (Html.ViewData.ModelState.ContainsKey("Comments") && Html.ViewData.ModelState["Comments"].Errors.Count > 0)
                    {
                        <div class="govuk-form-group govuk-form-group--error">                         
                            <p class="govuk-body">If you had marked any item as Incorrect , you can use the the textbox below to provide further details.</p>
                            <p id="comments-error" class="govuk-error-message">
                                <span class="govuk-visually-hidden">Error:</span>  @Html.ValidationMessageFor(m => m.Comments)
                            </p>
                            @Html.TextAreaFor(model => model.Comments, new { @class = "govuk-textarea govuk-textarea--error", @id = "comments", @name = "comment", @rows = "5" })
                        </div>
                    }
                    else
                    {
                        <div class="govuk-form-group">                        

                            @Html.TextAreaFor(model => model.Comments, new { @class = "govuk-textarea", @id = "comments", @name = "comment", @rows = "5" })
                        </div>

                    }

                    <div class="govuk-warning-text">
                        <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
                        <strong class="govuk-warning-text__text">
                            <span class="govuk-visually-hidden">Warning</span>
                            The details provided above will also be included in the email sent to
                            the CAB.
                        </strong>
                    </div>

                </div>
                 
               
                <div class="govuk-grid-column-full">

                    <hr class="govuk-section-break govuk-section-break--visible">
                    <dl class="govuk-summary-list">
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Email address of
                                CAB
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @Model.CertificateValidation.CertificateInformation.CreatedBy
                            </dd>
                        </div>


                    </dl>
                    <div class="govuk-button-group">
                        <button type="submit" class="govuk-button govuk-button--warning" data-module="govuk-button" name="saveReview" value="proceed">
                            Proceed with rejection
                        </button>
                        <button type="submit" class="govuk-button govuk-button--secondary" data-module="govuk-button" name="saveReview" value="cancel">
                            Cancel
                        </button>
                    </div>                
                </div>

                @Html.Hidden("RejectionReasons", JsonConvert.SerializeObject(Model.RejectionReasons))
                }

        </div>
    </main>
</div>

