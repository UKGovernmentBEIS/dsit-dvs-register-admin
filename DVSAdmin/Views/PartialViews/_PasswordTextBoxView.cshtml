@model PasswordTextBoxViewModel

<div data-module="govuk-password-input" class="govuk-form-group govuk-password-input @(Model.HasError ? "govuk-form-group--error" : "")">
    <label class="govuk-label govuk-label--s" for="@Model.PropertyName.ToLower()">
        @Model.Label
    </label>
    @if (Model.HasError)
    {
        <p id="@(Model.PropertyName.ToLower())-error" class="govuk-error-message">
            <span class="govuk-visually-hidden">Error:</span> @Model.ErrorMessage
        </p>
    }


    @if (!string.IsNullOrEmpty(Model.Hint))
    {
        <div id="event-name-hint" class="govuk-hint">
            @Model.Hint
        </div>
    }

    <div class="govuk-input__wrapper govuk-password-input__wrapper">
        @Html.Password(Model.PropertyName, Model.Value, new { @id = Model.PropertyName.ToLower(), @class = Model.HasError ? Model.Class + " govuk-input--error govuk-js-password-input-input" : Model.Class + " govuk-js-password-input-input", spellcheck = false, autocomplete = "current-password", autocapitalize = "none" })
        <button type="button" class="govuk-button govuk-button--secondary govuk-password-input__toggle govuk-js-password-input-toggle" data-module="govuk-button" aria-controls="password-input" aria-label="Show password" hidden>
            Show
        </button>
    </div>

</div>