@model DVSAdmin.Models.LoginPageViewModel
@{
    ViewData["Title"] = "Login to OfDIA Platform";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("LoginToAccount", "Login", FormMethod.Post))
{

    <div class="govuk-width-container">
        <main class="govuk-main-wrapper">
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-two-thirds">

                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="govuk-error-summary" data-module="govuk-error-summary">
                            <div role="alert">
                                <h2 class="govuk-error-summary__title">
                                    There is a problem
                                </h2>
                                <div class="govuk-error-summary__body">
                                    <ul class="govuk-list govuk-error-summary__list">
                                        <li>
                                            <a href="#">Incorrect email or password</a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    }

                    <h1 class="govuk-heading-xl govuk-!-margin-top-8">Sign into your account</h1>

                    <div class="govuk-form-group @(Html.ViewData.ModelState.ContainsKey("Email") && Html.ViewData.ModelState["Email"].Errors.Count > 0 ? "govuk-form-group--error" :"" )">
                        <h1 class="govuk-label-wrapper">
                            <label class="govuk-label govuk-label--s" for="event-name">
                                Email address
                            </label>
                        </h1>
                        @Html.TextBoxFor(m => m.Email, new { @class = "govuk-input", id = "email", name = "email" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "govuk-error-message" })
                    </div>

                    <div class="govuk-form-group @(Html.ViewData.ModelState.ContainsKey("Password") && Html.ViewData.ModelState["Password"].Errors.Count >0 ? "govuk-form-group--error": "" )">
                        <h1 class="govuk-label-wrapper">
                            <label class="govuk-label govuk-label--s" for="event-name">
                                Password
                            </label>
                        </h1>
                        @Html.TextBoxFor(m => m.Password, new { @class = "govuk-input", id = "password", name = "password", type = "password"})
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "govuk-error-message" })
                    </div>

                    <button type="submit" class="govuk-button govuk-!-margin-top-2" data-module="govuk-button">
                        Sign In
                    </button>


                    <h1 class="govuk-heading-m">New Users</h1>
                    <p class="govuk-body"><a class="govuk-link" href="~/">Sign up to the platform</a></p>


                    <h1 class="govuk-heading-m">Problems signing in</h1>
                    <p class="govuk-body"><a class="govuk-link" href="#">I have forgotten my password</a></p>
                </div>
            </div>
        </main>
    </div>
}
