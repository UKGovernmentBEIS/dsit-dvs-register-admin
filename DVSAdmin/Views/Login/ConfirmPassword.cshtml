@model DVSAdmin.Models.ConfirmPasswordViewModel
@{
    ViewData["Title"] = "Confirmation Code";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("ConfirmPasswordCheck", "Login", FormMethod.Post))
{
    @Html.HiddenFor(m => m.PasswordReset)
    <div class="govuk-width-container">
        <main id="main-content" class="govuk-main-wrapper" role="main">
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-two-thirds">

                    @if (!ViewData.ModelState.IsValid)
                    {
                        ViewData["Title"] = "Error: " + ViewData["Title"];
                        @await Html.PartialAsync("~/Views/PartialViews/_ErrorSummaryView.cshtml", Model)
                    }
                    <h1 class="govuk-heading-xl govuk-!-margin-top-8">Verify your email address and create a password</h1>

                    <p class="govuk-body">A code has been sent to: @ViewBag.Email</p>


                    <p class="govuk-body"> It might take a few minutes to arrive. The code will expire after 30 minutes.</p>

                    @{
                        var otpViewModel = new TextBoxViewModel
                        {
                            PropertyName = "OneTimePassword",
                            Label = "Enter the code to verify your email address",
                            Value = Model?.OneTimePassword,
                            Hint = "For example, 123456",
                            Class = "govuk-input govuk-input--width-10",
                            HasError = Html.ViewData.ModelState.ContainsKey("OneTimePassword") && Html.ViewData.ModelState["OneTimePassword"].Errors.Count > 0,
                            ErrorMessage = Html.ViewData.ModelState.ContainsKey("OneTimePassword") && Html.ViewData.ModelState["OneTimePassword"].Errors.Count > 0 ?
                        Html.ViewData.ModelState["OneTimePassword"].Errors[0].ErrorMessage : string.Empty,
                        };
                    }

                    @await Html.PartialAsync("~/Views/PartialViews/_TextBoxView.cshtml", otpViewModel)

                    <h2 class="govuk-heading-l">Create a password</h2>

                    <p class="govuk-body">Your password needs to be 8 or more characters. To help you create a long and strong password, the National Cyber Security Centre recommends using three random words.</p>

                    <p class="govuk-body">You can use a mix of letters, numbers or symbols in these three words.</p>



                    @{
                        var passwordViewModel = new PasswordTextBoxViewModel
                        {
                            PropertyName = "Password",
                            Label = "Password",
                            Value = Model?.Password,
                            Class = "govuk-input govuk-input--width-20",
                            HasError = Html.ViewData.ModelState.ContainsKey("Password") && Html.ViewData.ModelState["Password"].Errors.Count > 0,
                            ErrorMessage = Html.ViewData.ModelState.ContainsKey("Password") && Html.ViewData.ModelState["Password"].Errors.Count > 0 ?
                        Html.ViewData.ModelState["Password"].Errors[0].ErrorMessage : string.Empty,
                        };
                    }

                    @await Html.PartialAsync("~/Views/PartialViews/_PasswordTextBoxView.cshtml", passwordViewModel)

                    @{
                        var confirmPasswordViewModel = new PasswordTextBoxViewModel
                        {
                            PropertyName = "ConfirmPassword",
                            Label = "Confirm password",
                            Value = Model?.ConfirmPassword,
                            Class = "govuk-input govuk-input--width-20",
                            HasError = Html.ViewData.ModelState.ContainsKey("ConfirmPassword") && Html.ViewData.ModelState["ConfirmPassword"].Errors.Count > 0,
                            ErrorMessage = Html.ViewData.ModelState.ContainsKey("ConfirmPassword") && Html.ViewData.ModelState["ConfirmPassword"].Errors.Count > 0 ?
                        Html.ViewData.ModelState["ConfirmPassword"].Errors[0].ErrorMessage : string.Empty,
                        };
                    }

                    @await Html.PartialAsync("~/Views/PartialViews/_PasswordTextBoxView.cshtml", confirmPasswordViewModel)


                    <button type="submit" class="govuk-button govuk-!-margin-top-2" data-module="govuk-button">
                        Confirm
                    </button>

                    <details class="govuk-details">
                        <summary class="govuk-details__summary">
                            <span class="govuk-details__summary-text">
                                I have not received the code
                            </span>
                        </summary>
                        <div class="govuk-details__text">
                            <p class="govuk-body">We have sent an email to the address you used to set up your account.</p>
                            <p class="govuk-body">Check your spam or junk folder. If the email is not there, you can <a class="govuk-link" href="~/">restart the process</a> to request a new code or provide an alternative email address.</p>
                        </div>
                    </details>
                </div>
            </div>
        </main>
    </div>
}

