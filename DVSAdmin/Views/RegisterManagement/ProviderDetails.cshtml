@using DVSAdmin.BusinessLogic.Models;
@using DVSAdmin.Extensions;
@model ProviderProfileDto;
@using DVSAdmin.CommonUtility.Models.Enums;
@using DVSAdmin.CommonUtility.Models;
@{
    ViewData["Title"] = "Provider contact information";
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";

    var providerEmailsViewModel = new ProviderEmailsViewModel
    {
        Heading = "Provider contact information",
        ProviderContact = Model
    };

    ViewBag.showViewDetailsLink = true;

    var isRemovable = Model.Services.Any(service =>
        (service.ServiceStatus == ServiceStatusEnum.Published ||
         service.ServiceStatus == ServiceStatusEnum.CabAwaitingRemovalConfirmation) &&
        !Model.Services.Any(s =>
            s.ServiceStatus == ServiceStatusEnum.PublishedUnderReassign ||
            s.ServiceStatus == ServiceStatusEnum.RemovedUnderReassign));


}

<div class="govuk-width-container">
    @Html.ActionLink("Back", "RegisterManagement", "RegisterManagement", null, new { @class = "govuk-back-link" })
    <main id="main-content" class="govuk-main-wrapper" role="main">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <h1 class="govuk-heading-xl">@Model.RegisteredName</h1>

                @await Html.PartialAsync("~/Views/RegisterManagement/PartialViews/_PublicationStatusTableView.cshtml", Model)
                @await Html.PartialAsync("~/Views/PartialViews/_ProviderEmailsView.cshtml", providerEmailsViewModel)
                @await Html.PartialAsync("~/Views/RegisterManagement/PartialViews/_ProviderContactView.cshtml", Model)

                @foreach (var item in Model.Services)
                {
                    <div class="govuk-summary-card">
                        <div class="govuk-summary-card__title-wrapper">
                            <h2 class="govuk-summary-card__title">
                                Service details: @item.ServiceName
                            </h2>
                            <ul class="govuk-summary-card__actions">
                                <li class="govuk-summary-card__action">
                                    <a class="govuk-link" href="service-details?serviceKey=@item.ServiceKey">View service details <span class="govuk-visually-hidden"> of Service name @item.ServiceName</span></a>
                                </li>
                                @if (item.ServiceStatus == ServiceStatusEnum.CabAwaitingRemovalConfirmation || item.ServiceStatus == ServiceStatusEnum.Published)
                                {
                                    bool isAllRemoved = Model.Services.Count - 1 == Model.Services.Count(s => s.ServiceStatus == ServiceStatusEnum.Removed);
                                    string whatToRemove = item.ServiceStatus == ServiceStatusEnum.CabAwaitingRemovalConfirmation ? (isAllRemoved ? "Provider" : "Service") : null;
                                    string action = item.ServiceStatus == ServiceStatusEnum.Published ? (isAllRemoved ? "ReasonForRemoval" : "ServiceRemovalReason") : null;

                                    <li class="govuk-summary-card__action">
                                        <a class="govuk-link" href="@Url.Action(whatToRemove != null ? "CabRemoval" : action, "RemoveProvider", new { providerId = @Model.Id, serviceId = @item.Id, whatToRemove })">
                                            Remove service <span class="govuk-visually-hidden"> Service name: @item.ServiceName</span>
                                        </a>
                                    </li>
                                }
                                else if (item.ServiceStatus == ServiceStatusEnum.AwaitingRemovalConfirmation)
                                {
                                    <li class="govuk-summary-card__action">
                                        <a class="govuk-link" href="@Url.Action("CancelRemoval", "RemoveProvider", new { serviceId = item.Id })">
                                            Cancel removal request  <span class="govuk-visually-hidden"> Service name: @item.ServiceName</span>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>
                        <div class="govuk-summary-card__content">
                            <dl class="govuk-summary-list">
                                <div class="govuk-summary-list__row">
                                    <dt class="govuk-summary-list__key">
                                        Publication status
                                    </dt>
                                    <dd class="govuk-summary-list__value">
                                        @if(item?.CertificateReview!=null && item?.CertificateReview?.CertificateReviewStatus == CertificateReviewEnum.Rejected)
                                        {
                                            @HtmlExtensions.ToStyledStrongTag(item.CertificateReview.CertificateReviewStatus)
                                        }
                                        else if (item?.PublicInterestCheck != null 
                                        && item?.PublicInterestCheck?.PublicInterestCheckStatus == PublicInterestCheckEnum.PublicInterestCheckFailed ||
                                        item?.PublicInterestCheck?.PublicInterestCheckStatus == PublicInterestCheckEnum.PrimaryCheckFailed)
                                        {
                                            @HtmlExtensions.ToStyledStrongTag(item.PublicInterestCheck.PublicInterestCheckStatus)
                                        }
                                        else
                                        {
                                            @HtmlExtensions.ToStyledStrongTag(@item.ServiceStatus)
                                        }
                                      
                                    </dd>
                                </div>
                            </dl>
                        </div>
                    </div>
                }
                <div class="govuk-button-group">
                  @*   @if (!(Model.ProviderStatus == ProviderStatusEnum.Published)
                    && (Model.ProviderStatus == ProviderStatusEnum.ReadyToPublish || Model.ProviderStatus == ProviderStatusEnum.ReadyToPublishNext))
                    {
                        <a href="publish-service?providerId=@Model.Id" role="button" draggable="false" class="govuk-button" data-module="govuk-button">
                            Publish
                        </a>
                    } *@
                    @if (isRemovable)
                    {
                        <a href="/remove/provider/reason-for-removal?providerId=@Model.Id" role="button" draggable="false" class="govuk-button govuk-button--warning" data-module="govuk-button">
                            Remove provider from register
                        </a>
                    }
                </div>
            </div>
        </div>
    </main>
</div>

