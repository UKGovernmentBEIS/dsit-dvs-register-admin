@using DVSAdmin.Models.Home
@model DVSAdmin.Models.Home.PendingListViewModel
@{
    ViewData["Title"] = "PendingCertificateReviews";
    ViewData["ActiveNav"] = "OpenTasks";
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
}

<div class="govuk-width-container">
    <main id="main-content" class="govuk-main-wrapper" role="main">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <h1 class="govuk-heading-xl govuk-!-margin-bottom-5">Open Tasks</h1>  
                <p class="govuk-body">
                    Reviewing certificates and information submitted about services.
                </p>
            </div>
                <div class="govuk-grid-column-full">
                @await Html.PartialAsync(
                "~/Views/Home/PartialViews/_DashboardSummaryCards.cshtml",
                                new DashboardSummaryCardViewModel[]
                                {
                                    new DashboardSummaryCardViewModel
                                    {
                                        Label = "Certification reviews pending",
                                        Count = Model.OpenTaskCount.PendingCertificateReviews,
                                        Action = "PendingCertificateReviews",
                                        Emphasised = true
                                    },
                                    new DashboardSummaryCardViewModel
                                    {
                                        Label = "Primary checks pending",
                                        Count = Model.OpenTaskCount.PendingPrimaryChecks,
                                        Action = "PendingPrimaryChecks"
                                    },
                                    new DashboardSummaryCardViewModel
                                    {
                                        Label = "Secondary checks pending",
                                        Count = Model.OpenTaskCount.PendingSecondaryChecks,
                                        Action = "PendingSecondaryChecks"
                                    },
                                    new DashboardSummaryCardViewModel
                                    {
                                        Label = "Update and removal requests pending",
                                        Count = Model.OpenTaskCount.PendingUpdateAndRemovalRequests,
                                        Action = "PendingUpdateOrRemoval"
                                    }
                                })

                <div class="govuk-form-group" style="border: 1px solid #b1b4b6; padding: 20px; padding-bottom: 0px; margin-top: 20px;">
                    <table class="govuk-table govuk-table--small-text-until-tablet">
                        <caption class="govuk-table__caption govuk-table__caption--m govuk-!-margin-bottom-5">
                            Certificate reviews pending
                            <span class="govuk-visually-hidden">column headers with links are sortable</span>
                        </caption>
                        <thead class="govuk-table__head">
                            <tr class="govuk-table__row sortable-table">
                                <th scope="col" class="govuk-table__header" aria-sort="@((Model.CurrentSort == "service name") ? Model.CurrentSortAction : "none")"
                                    aria-label="sort by service name">
                                    <a href="@Url.Action("PendingCertificateReviews", "Home", new { CurrentSort = Model.CurrentSort, CurrentSortAction = Model.CurrentSortAction, NewSort = "service name" })">
                                        <b>Service name</b>
                                    </a>
                                </th>
                                <th scope="col" class="govuk-table__header" aria-sort="@((Model.CurrentSort == "provider") ? Model.CurrentSortAction : "none")"
                                    aria-label="sort by provider name">
                                    <a href="@Url.Action("PendingCertificateReviews", "Home", new { CurrentSort = Model.CurrentSort, CurrentSortAction = Model.CurrentSortAction, NewSort = "provider" })">
                                        <b>Service provider</b>
                                    </a>
                                </th>
                                <th scope="col" class="govuk-table__header" aria-sort="@((Model.CurrentSort == "days") ? Model.CurrentSortAction : "none")"
                                    aria-label="sort by days left to complete review">
                                    <a href="@Url.Action("PendingCertificateReviews", "Home", new { CurrentSort = Model.CurrentSort, CurrentSortAction = Model.CurrentSortAction, NewSort = "days" })">
                                        <b>Days left to<br />complete review</b>
                                    </a>
                                </th>
                                <th scope="col" class="govuk-table__header" aria-sort="@((Model.CurrentSort == "application") ? Model.CurrentSortAction : "none")"
                                    aria-label="sort by application version, new or reapplication">
                                    <a href="@Url.Action("PendingCertificateReviews", "Home", new { CurrentSort = Model.CurrentSort, CurrentSortAction = Model.CurrentSortAction, NewSort = "application" })">
                                        <b>New application<br />or reapplication</b>
                                    </a>
                                </th>
                            </tr>
                        </thead>
                        <tbody class="govuk-table__body">
                            @if (Model?.PendingRequests != null && Model.PendingRequests.Count > 0)
                            {
                                @foreach (var item in Model.PendingRequests)
                                {
                                    <tr class="govuk-table__row">
                                        <td class="govuk-table__cell">
                                            @Html.ActionLink(
                                            item.ServiceName,
                                            "CertificateReview",
                                            "CertificateReview",
                                            new { serviceId = item.Id },
                                            new { @class = "govuk-link" })
                                </td>
                                <td class="govuk-table__cell"> @item.Provider.RegisteredName</td>
                                <td class="govuk-table__cell"> @item.DaysLeftToComplete @(item.DaysLeftToComplete == 1 ? "day" : "days")</td>
                                <td class="govuk-table__cell"> @item.NewOrResubmission</td>
                            </tr>
                                                        }
                            }
                            else
                            {
                                <tr class="govuk-table__row">
                                    <td class="govuk-table__cell" colspan="4">
                                        <p class="govuk-body"><b>Showing 0 results</b></p>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    @if (Model?.TotalPages > 1)
                    {
                        PaginationViewModel paginationViewModel = new PaginationViewModel
                        {
                            Action = "PendingCertificateReviews",
                            CurrentPage = ViewBag.CurrentPage,
                            TotalPages = Model.TotalPages,
                            Sort = Model.CurrentSort,
                            SortAction = Model.CurrentSortAction
                        };

                        @await Html.PartialAsync("~/Views/PartialViews/_PaginationView.cshtml", paginationViewModel)
                    }

                </div>

                </div>
            </div>
    </main>
</div>




