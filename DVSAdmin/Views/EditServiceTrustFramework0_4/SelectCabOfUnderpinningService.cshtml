@model DVSAdmin.Models.CabTransfer.SelectCabViewModel
@using DVSAdmin.BusinessLogic.Models


@{
    ViewData["Title"] = "Conformity Assessment Body of the underpinning service";
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
}

<div class="govuk-width-container">
    <a href="@((Model.FromSummaryPage) ? Url.Action("ServiceSummary", "EditService") : Url.Action("ServiceDetails", "RegisterManagement", new { serviceKey = Model.ServiceKey }))" class="govuk-back-link">Back</a>
    <main id="main-content" class="govuk-main-wrapper" role="main">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                @if (ViewData.ModelState.ErrorCount > 0)
                {
                    @if (Html.ViewData.ModelState["SelectedCabId"].Errors.Count > 0)
                    {
                        ViewData["Title"] = "Error: " + ViewData["Title"];
                        @await Html.PartialAsync("~/Views/PartialViews/_ErrorSummaryView.cshtml", Model)
                    }
                }
                <h1 class="govuk-heading-xl">Conformity Assessment Body of the underpinning service</h1>
                <p class="govuk-body">
                    This must match the certifying CAB listed on the certificate. The information
                    you provide will be publicly displayed on the register of digital identity and
                    attribute services.
                </p>

                <p class="govuk-body">
                    To make changes, type the new information and select 'Save'. If there are no changes to make, select 'cancel.'
                </p>

                @using (Html.BeginForm("SaveSelectedCab", "EditServiceTrustFramework0_4", FormMethod.Post))
                {
                    @Html.HiddenFor(m => m.FromSummaryPage, new { @Value = ViewBag.fromSummaryPage })
                    @Html.HiddenFor(m => m.FromUnderPinningServiceSummaryPage, new { @Value = ViewBag.fromUnderPinningServiceSummaryPage })
                  
                    
                    <div class="govuk-form-group govuk-!-margin-bottom-7">

                        <label class="govuk-label govuk-!-font-weight-bold govuk-!-margin-bottom-2" for="selectedcabid">
                            CAB name
                        </label>

                        @Html.DropDownListFor(s => s.SelectedCabId, new SelectList(Model.Cabs ?? new List<CabDto>(), "Id", "CabName"), "Choose a CAB",
                        new
                        {
                            @class = "govuk-select govuk-!-width-two-thirds " + (ViewData.ModelState.IsValid ? "" : "govuk-select--error"),
                            id = "selectedcabid",
                            name = "SelectedCabId",
                            aria_describedby = ViewData.ModelState.IsValid ? "" : "select-cab-error"
                        })

                    </div>
                    <div class="govuk-button-group">
                        <button type="submit" class="govuk-button govuk-!-margin-top-6" data-module="govuk-button">
                            Save
                        </button>
                        <a href="@((Model.FromSummaryPage) ? Url.Action( "ServiceSummary", "EditService") :
                        Url.Action("ServiceDetails", "RegisterManagement", new { serviceKey = Model.ServiceKey }))" class="govuk-button govuk-button--secondary" role="button">Cancel</a>
                    </div>
                }
            </div>
        </div>
    </main>
</div>