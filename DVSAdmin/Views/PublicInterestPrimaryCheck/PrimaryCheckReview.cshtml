@model DVSAdmin.Models.PublicInterestPrimaryCheckViewModel;
@using DVSAdmin.CommonUtility
@using DVSAdmin.Extensions;
@using DVSAdmin.CommonUtility.Models.Enums;
@using DVSAdmin.CommonUtility.Models;
@{
    ViewData["Title"] = "Primary review";
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
}


<div class="govuk-width-container">
    @Html.ActionLink("Back", "PublicInterestCheck", "PublicInterestCheck", null, new { @class = "govuk-back-link" })
    <main id="main-content" class="govuk-main-wrapper" role="main">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                @using (Html.BeginForm("SavePrimaryCheckReview", "PublicInterestPrimaryCheck", FormMethod.Post))
                {
                    @Html.HiddenFor(m=>m.ServiceId)
                    @Html.HiddenFor(m => m.ProviderProfileId)
                    @Html.HiddenFor(m => m.PrimaryCheckUserId)
                    @Html.HiddenFor(m => m.SecondaryCheckUserId)
                    
                    @if (Html.ViewData?.ModelState.ContainsKey("PublicInterestChecksMet") == true && Html.ViewData.ModelState["PublicInterestChecksMet"].Errors.Count > 0)
                    {                      
                        ViewData["Title"] = "Error: " + ViewData["Title"];
                        @await Html.PartialAsync("~/Views/PartialViews/_SpecificErrorsView.cshtml",
                                 new Tuple<string, IEnumerable<Microsoft.AspNetCore.Mvc.ModelBinding.ModelError>>("PublicInterestChecksMet", Html.ViewData.ModelState["PublicInterestChecksMet"]?.Errors))
                    }
                    <span class="govuk-caption-xl">Public interest check</span>
                    <h1 class="govuk-heading-xl">Primary review</h1>
                    <p class="govuk-body">You are conducting the primary review of the public interest check. Once
                        you have completed the review, this service record will be passed to another OFDIA user for a secondary review.
                        This enhances security by ensuring that the decision making process does not depend on a single
                    individual.</p>
                  

                    @await Html.PartialAsync("~/Views/PublicInterestCheck/PartialViews/_ServiceDetailsWithReviewStatus.cshtml", Model.Service)


                    @if (Model.Service.PublicInterestCheck!=null && Model.Service.PublicInterestCheck.PublicInterestCheckStatus == PublicInterestCheckEnum.SentBackBySecondReviewer)
                    {
                        <h3 class="govuk-heading-m">Secondary check reviewer comments</h3>
                        <p class="govuk-body govuk-summary-list__key">@Model.Service.PublicInterestCheck.SecondaryCheckUser.UserName</p>
                        <span class="govuk-caption-m">@DateTimeExtensions.FormatDateTime(@Model.Service.PublicInterestCheck.SecondaryCheckTime)</span>
                        <p class="govuk-body">  @HtmlExtensions.ToStringWithLineBreaks(@Model?.Service.PublicInterestCheck.SecondaryCheckComment ?? string.Empty)</p>
                    }

                    <h2 class="govuk-heading-l">How to complete the checks</h2>
                    <ol class="govuk-list govuk-list--number">
                        <li>Ensure the information on the certificate meets the requirements in the<a href="#" class="govuk-link"> Process for conducting certificate reviews and due diligence checks</a>document.</li>
                        <li>
                            If you confirm that the primary interest checks have been met and select the
                            'Continue' button, the service record will be sent to the secondary OfDIA reviewer.
                        </li>
                        <li>If you confirm that the primary interest checks have not been met and
                            select the 'Continue' button, you will be able to detail the reasons for your decision.</li>
                    </ol>
                    <h2 class="govuk-heading-l">Application details</h2>             


                    <h3 class="govuk-heading-m govuk-!-padding-top-5">Company overview</h3>
                    <dl class="govuk-summary-list">
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Registered name
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @Model.Service.Provider.RegisteredName
                            </dd>
                        </div>
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Trading names
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @Html.DisplayFor(model => model.Service.Provider.TradingName)
                            </dd>
                        </div>

                        @if (Model.Service.Provider.HasRegistrationNumber)
                        {
                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    Companies House or charity
                                    registration number
                                </dt>
                                <dd class="govuk-summary-list__value">
                                    @Model.Service.Provider.CompanyRegistrationNumber
                                </dd>
                            </div>

                        }
                        else
                        {

                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    Companies House or charity
                                    registration number
                                </dt>
                                <dd class="govuk-summary-list__value">
                                    @Constants.NullFieldsDisplay
                                </dd>
                            </div>
                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    Dun & Bradstreet or D U-N-S
                                    number
                                </dt>
                                <dd class="govuk-summary-list__value">
                                    @Model.Service.Provider.DUNSNumber
                                </dd>
                            </div>
                        }

                        @if (Model.Service.Provider.HasParentCompany)
                        {

                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    Registered name of parent
                                    company
                                </dt>
                                <dd class="govuk-summary-list__value">
                                    @Model.Service.Provider.ParentCompanyRegisteredName
                                </dd>
                            </div>
                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">
                                    Location of parent company
                                </dt>
                                <dd class="govuk-summary-list__value">
                                    @Model.Service.Provider.ParentCompanyLocation
                                </dd>
                            </div>

                        }
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Public contact email
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @Html.DisplayFor(model => model.Service.Provider.PublicContactEmail)
                            </dd>
                        </div>

                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Public telephone number
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @Html.DisplayFor(model => model.Service.Provider.ProviderTelephoneNumber)
                            </dd>
                        </div>

                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Website address
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @Model.Service.Provider.ProviderWebsiteAddress
                            </dd>
                        </div>

                    </dl>




                    <h1 class="govuk-heading-l">Approval checklist</h1>



                    @await Html.PartialAsync("~/Views/PartialViews/_TwoRadioButtonGroupView.cshtml", new TwoRadioButtonGroupViewModel
                   {
                       PropertyName = "PublicInterestChecksMet",
                       Value = Model.PublicInterestChecksMet,
                       Legend = "Have the public interest checks for this service been met?",
                       HasError = Html.ViewData.ModelState.ContainsKey("PublicInterestChecksMet") && Html.ViewData.ModelState["PublicInterestChecksMet"].Errors.Count > 0,
                       ErrorMessage = Html.ViewData.ModelState.ContainsKey("PublicInterestChecksMet") && Html.ViewData.ModelState["PublicInterestChecksMet"].Errors.Count > 0 ?
                       Html.ViewData.ModelState["PublicInterestChecksMet"].Errors[0].ErrorMessage : string.Empty,
                       Label1 = "Yes, the primary check has passed",
                       Label2 = "No, the primary check has failed"
                   })

                    @if ((Model.PublicInterestCheck != null && Model.PublicInterestCheckStatus == PublicInterestCheckEnum.SentBackBySecondReviewer) || Model.Service.ServiceStatus == ServiceStatusEnum.Received)

                    {
                        <div id="submitvalidation" class="govuk-button-group">
                            <button type="submit" class="govuk-button" data-module="govuk-button" >
                                Continue
                            </button>
                          
                        </div>

                    }

                }
            </div>
        </div>
    </main>

</div>